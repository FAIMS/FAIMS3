name: Nightly Android builds

on:
  push:
    branches:
      - main

  workflow_dispatch:

  schedule:
    - cron: '39 20 * * 1-5'

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.commitswithintime.outputs.has-new-commits-within-time }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run CommitsWithinTime script
        uses: AlexHolderDeveloper/CommitsWithinTime@v1.1.11
        id: commitswithintime
        with:
          days: 1
      - name: Get the output from CommitsWithinTime
        run: |
          echo "The 'has-new-commits-within-time' value is ${{ steps.commitswithintime.outputs.has-new-commits-within-time }}"
          echo "The 'number-of-commits-within-time' value is ${{ steps.commitswithintime.outputs.number-of-commits-within-time }}"
          echo "The 'total-commits' value is ${{ steps.commitswithintime.outputs.total-commits }}"
  node-deb-gh-build-play:
    runs-on: ubuntu-latest
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run == 'true' }}
    continue-on-error: false
    strategy:
      matrix:
        node-version: ['20']
    outputs:
      prnum: ${{ steps.prnum.outputs.value }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Get PR Number
        id: prnum
        run: |
          echo -n "value=$(app/bin/getDescribeString.sh gh-play)" >> "$GITHUB_OUTPUT"        
        shell: bash  
      # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}            
          cache: 'npm'
      # https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-gradle
      - name: Set up adopt JDK 1.17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      # https://www.runway.team/blog/ci-cd-pipeline-android-app-fastlane-github-actions
      # Because fastlane stuff is in android, we need working-directory
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.1
          bundler-cache: true
          working-directory: app/android
      - name: Decode Service Account Key JSON File
        uses: timheuer/base64-to-file@v1
        id: service_account_json_file
        with:
          fileName: "fastlane-android-google-play-key.json"
          encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}     
      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          fileName: "android-signing-keystore.jks"
          encodedString: ${{ secrets.KEYSTORE_FILE }}        
      # https://github.com/android-actions/setup-android
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Building webapp
        run: |
          export platform="github-actions-play"
          export serverprefix="testing"
          export VITE_CLUSTER_ADMIN_GROUP_NAME=cluster-admin
          export VITE_COMMIT_VERSION=$(app/bin/getDescribeString.sh android)
          export VITE_SHOW_WIPE=true
          export VITE_SHOW_MINIFAUXTON=true
          export VITE_CONDUCTOR_URL=https://conductor.testing.fieldmark.app
          export VITE_PRODUCTION_BUILD=true          
          export VITE_SERVICES=FAIMSTEXT
          export VITE_PROD_BUILD=true 
          export VITE_TAG=prodAndroid       
          export VITE_BUGSNAG_KEY=${{secrets.BUGSNAG_KEY}}
          git clean -xfd
          npm ci
          npm run build-app
      # https://capacitorjs.com/docs/android
      # The bundle install shouldn't be necessary, but given we've got ios and android in...      
      - run: npm run app-update android
      - run: npm run webapp-sync -- --deployment android
      - name: Fastlane
        run: |
          cd app/android
          bundle install
          bundle exec fastlane deploy_fieldmark_closed_track
        env:
          JAVA_KEYSTORE: ${{ steps.android_keystore.outputs.filePath }}
          JAVA_KEYSTORE_PASSWORD: ${{ secrets.JAVA_KEYSTORE_PASSWORD }}
          JAVA_KEY: ${{ secrets.JAVA_KEY}}
          JAVA_KEY_PASSWORD: ${{ secrets.JAVA_KEY_PASSWORD }}
          ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
          serverprefix: "testing"
          prnum: ${{steps.prnum.outputs.value}}
      # - run: cd android && ./gradlew assembleDebug
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: |
            ${{ github.workspace }}app/android/app/build/outputs/bundle/release

name: Publish Conductor API Container to GHCR
on:
  push:
    branches:
      - main
      - chore/add-build-outputs-to-turbo
  release:
    types: [published]

# Defines two custom environment variables for the workflow. These are
# used for the Container registry domain, and a name for the Docker
# image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: FAIMS/faims3-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Uses the `docker/login-action` action to log in to the Container registry
      # using the account and password that will publish the packages.
      # Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-
            type=ref,event=branch
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./api/BuildDockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
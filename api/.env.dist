# Compose expects each line in an env file to be in VAR=VAL format.
# Lines beginning with # are processed as comments and ignored.
# Blank lines are ignored.
# There is no special handling of quotation marks. This means that they are part of the VAL.

# compose variables
PROFILE_NAME=local-dev

# location of public and private keys
KEY_FILE_PATH=.

# Public name and short description for this instance
CONDUCTOR_INSTANCE_NAME="Development FAIMS Server"
CONDUCTOR_DESCRIPTION="Development server on localhost"
CONDUCTOR_SHORT_CODE_PREFIX="DEV"

# couchdb configuration
COUCHDB_USER=admin
COUCHDB_PASSWORD=aSecretPasswordThatCantBeGuessed

# Port for external requests to couchdb (mapped by docker compose)
COUCHDB_EXTERNAL_PORT=5984

# URL used internally to talk to CouchDB. In a docker compose setup
# this should reference the host 'couchdb'
COUCHDB_INTERNAL_URL=http://localhost:5984/

# public URL for the couchdb service, including e.g. a public domain name
COUCHDB_PUBLIC_URL=http://localhost:5984/

# Port for external requests to conductor (mapped by docker compose)
CONDUCTOR_EXTERNAL_PORT=8080
# Port used inside the conductor container
CONDUCTOR_INTERNAL_PORT=8000
# public URL for the conductor service, include e.g. public domain name
CONDUCTOR_PUBLIC_URL=http://localhost:8080

# You will need to generate these
FAIMS_COOKIE_SECRET=output of $(uuidgen) or similar

# Refresh expires in (2 days)
REFRESH_TOKEN_EXPIRY_MINUTES=2880

# Access expires in 5 minutes
ACCESS_TOKEN_EXPIRY_MINUTES=5

# Authentication configurations
# ==========================
# To configure Google auth
AUTH_GOOGLE_TYPE="google"
AUTH_GOOGLE_INDEX=1
AUTH_GOOGLE_DISPLAY_NAME="Google"
AUTH_GOOGLE_HELPER_TEXT="Log in with your Google account"
AUTH_GOOGLE_CLIENT_ID="google client id"
AUTH_GOOGLE_CLIENT_SECRET="google client secret"
AUTH_GOOGLE_SCOPE="profile,email,https://www.googleapis.com/auth/plus.login"

# An OIDC based provider example
AUTH_AAF_TYPE="oidc"
AUTH_AAF_INDEX=2
AUTH_AAF_DISPLAY_NAME="AAF"
AUTH_AAF_HELPER_TEXT="Use your Australian University credentials"
AUTH_AAF_ISSUER="https://central.test.aaf.edu.au"
AUTH_AAF_AUTHORIZATION_URL="https://central.test.aaf.edu.au/oidc/authorize"
AUTH_AAF_TOKEN_URL="https://central.test.aaf.edu.au/oidc/token"
AUTH_AAF_USER_INFO_URL="https://central.test.aaf.edu.au/oidc/userinfo"
AUTH_AAF_CLIENT_ID="aaf client id"
AUTH_AAF_CLIENT_SECRET="aaf client secret"
AUTH_AAF_SCOPE="profile,email"

# Rate Limiter Configuration
# Window duration in milliseconds (default: 600000 - 10 minutes)
RATE_LIMITER_WINDOW_MS=600000

# Maximum number of requests per window (default: 1000)
RATE_LIMITER_PER_WINDOW=1000

# Enable/disable rate limiting (default: true)
RATE_LIMITER_ENABLED=true

# What is the URL of the new conductor?
NEW_CONDUCTOR_URL=http://localhost:3001

# Comma separated list of domains which redirects are allowed to point to for
# auth flows - recommend usage of web, app and API endpoints
REDIRECT_WHITELIST=http://localhost:8080,http://localhost:3000,http://localhost:3001

# Email Service Configuration
# ===========================

# Email service type (SMTP or MOCK)
EMAIL_SERVICE_TYPE=MOCK

# Sender information
EMAIL_FROM_ADDRESS=notifications@example.com
EMAIL_FROM_NAME=FAIMS Notification
EMAIL_REPLY_TO=support@example.com

# SMTP Server Configuration
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_SECURE=true
SMTP_USER=smtp_username
SMTP_PASSWORD=smtp_password
SMTP_CACHE_EXPIRY_SECONDS=300

# Change this if you want to test sending emails using the utility route
TEST_EMAIL_ADDRESS=test@gmail.com

# Long-Lived Token Configuration
# ===============================
# Maximum duration in days for long-lived tokens (set to 90 for testing)
# Use 'unlimited' or leave undefined for no maximum duration
MAXIMUM_LONG_LIVED_DURATION_DAYS=90

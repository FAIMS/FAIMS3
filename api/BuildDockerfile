# syntax=docker/dockerfile:1

# BASED ON https://turbo.build/repo/docs/guides/tools/docker
# AND https://github.com/ThaddeusJiang/turborepo-starter/blob/main/apps/api/Dockerfile

# Use Node 20 base
FROM node:20-alpine AS base

# Declare build arguments with default empty values
ARG TURBO_TEAM=""
ARG TURBO_TOKEN=""
ARG TURBO_API_URL=""

# Set environment variables using the build arguments, with fallback to empty string
ENV TURBO_TEAM=${TURBO_TEAM}
ENV TURBO_TOKEN=${TURBO_TOKEN}
ENV TURBO_API_URL=${TURBO_API_URL}


# PRUNE TO GET DEPENDENCIES [builder]
# ===================================

# Use turbo to prune package dependencies
FROM base AS builder

RUN apk update
RUN apk add --no-cache libc6-compat

# work in /app folder
WORKDIR /app

# install turbo global
RUN npm install turbo@^2.0.11 -g

# copy everything into builder
COPY . .

# prune using turbo for only faims3 and it's dependencies
RUN turbo prune @faims3/api --docker

# INSTALL PACKAGES [installer]
# ============================

# add lockfiles dependencies
FROM base AS installer
RUN apk update
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .

# COPY --from=builder /app/out/full/library/data-model/tsconfig.json ./library/data-model/tsconfig.json
RUN npm install

# install turbo global
RUN npm install turbo@^2.0.11 -g

# Configure Turbo cache if TURBO_API_URL is set
RUN mkdir -p .turbo && \
    if [ -n "$TURBO_API_URL" ]; then \
    echo '{"apiurl": "'${TURBO_API_URL}'"}' > .turbo/config.json && \
    echo "Turborepo config file created at .turbo/config.json"; \
    else \
    echo "TURBO_API_URL not set. Skipping Turborepo cache configuration."; \
    fi

# Build the project 
COPY --from=builder /app/out/full/ .

# build packages using turbo
RUN turbo run build --filter=@faims3/api

# PRODUCTION RUNNER [runner]
# ==========================

FROM base AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 faims
USER faims

# NOTE: To run API, we need 
# 1) all node modules
# 2) all package*.json 
# 3) all builds

# NODE MODULES

# Node modules for top level
COPY --from=installer /app/node_modules ./node_modules
# Node modules for data model
COPY --from=installer /app/library/data-model/node_modules ./library/data-model/node_modules

# BUILD FILES

# Build for API
COPY --from=installer /app/api/build ./api/build
# Copy handle bar views into appropriate build path
# TODO set the app root directory better and build into build process more nicely
COPY --from=installer /app/api/views ./views
# Build for data model
COPY --from=installer /app/library/data-model/build ./library/data-model/build

# PACKAGE*.json FILES

# Copy all package json and package lock info from prune (tells node what to do)
COPY --from=builder /app/out/json/ .

# Run the node app
CMD ["node", "api/build/src/index.js"]

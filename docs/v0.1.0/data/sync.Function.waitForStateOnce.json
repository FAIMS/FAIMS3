{"id":5886,"name":"waitForStateOnce","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"src/sync/index.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/index.ts","line":64,"character":22,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/sync/index.ts#L64"}],"signatures":[{"id":5887,"name":"waitForStateOnce","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows the user to asynchronously await for any of listings_updated,\nall_projects_updated, listing_projects_synced, all_meta_synced,\nall_data_updated, or anything else that is updated along with an emission\nof the 'all_state' event from DirectoryEmitter.\n\nThis will only resolve when the given predicate returns true."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Promise that resolves/rejects when state changes."}]}]},"parameters":[{"id":5888,"name":"statePredicate","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Function to run, return true: will cause this\n waitForStateOnce to resolve. Otherwise, return of false will not cause\n anything to happen (yet). If returned false, it may be called again.\n Errors bubble up to this waitForStateOnce's promise."}]},"type":{"type":"reflection","declaration":{"id":5889,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/index.ts","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/sync/index.ts#L65"}],"signatures":[{"id":5890,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]}},"text":{"comment":"<p>Function to run, return true: will cause this\n waitForStateOnce to resolve. Otherwise, return of false will not cause\n anything to happen (yet). If returned false, it may be called again.\n Errors bubble up to this waitForStateOnce&#39;s promise.</p>\n"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync.Function.waitForStateOnce","hash":"waitForStateOnce"},"text":{"comment":"<p>Allows the user to asynchronously await for any of listings_updated,\nall_projects_updated, listing_projects_synced, all_meta_synced,\nall_data_updated, or anything else that is updated along with an emission\nof the &#39;all_state&#39; event from DirectoryEmitter.</p>\n<p>This will only resolve when the given predicate returns true.</p>\n<h5>Returns:</h5><p>Promise that resolves/rejects when state changes.</p>\n"},"sources":[{"fileName":"src/sync/index.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/index.ts","line":64,"character":0,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/sync/index.ts#L64"}],"parentId":5886}],"is":{"declaration":true},"location":{"query":"sync.Function.waitForStateOnce","hash":""},"text":{},"parentId":5885}

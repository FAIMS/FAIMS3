{"id":5709,"name":"DirectoryEmitter","kind":256,"kindString":"Interface","flags":{},"children":[{"id":5824,"name":"addListener","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":317,"character":16}],"signatures":[{"id":5825,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`emitter.on(eventName, listener)`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v0.1.26"}]}]},"parameters":[{"id":5826,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{}},{"id":5827,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5828,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":317,"character":66}],"signatures":[{"id":5829,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":5830,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.addListener","hash":"addListener.addListener"},"text":{"comment":"<p>Alias for <code>emitter.on(eventName, listener)</code>.</p>\n<h5>Since:</h5><p>v0.1.26</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":317,"character":16}],"parentId":5824}],"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"addListener"},"text":{},"parentId":5709},{"id":5782,"name":"emit","kind":2048,"kindString":"Method","flags":{"isOverride":true},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":164,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L164"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":169,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L169"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":174,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L174"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":181,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L181"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":187,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L187"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":192,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L192"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":199,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L199"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":200,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L200"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":201,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L201"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":202,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L202"}],"signatures":[{"id":5783,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5784,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"meta_sync_state"},"text":{}},{"id":5785,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5786,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"ProjectEventInfo"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":164,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L164"}],"parentId":5782},{"id":5787,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5788,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"data_sync_state"},"text":{}},{"id":5789,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5790,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"ProjectEventInfo"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":169,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L169"}],"parentId":5782},{"id":5791,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5792,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"project_update"},"text":{}},{"id":5793,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"literal","value":"update"},{"type":"reference","id":5998,"name":"createdProjectsInterface"}]},{"type":"tuple","elements":[{"type":"literal","value":"delete"}]},{"type":"tuple","elements":[{"type":"literal","value":"create"}]}]},"text":{}},{"id":5794,"name":"meta_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5795,"name":"data_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5796,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"ProjectEventInfo"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":174,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L174"}],"parentId":5782},{"id":5797,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5798,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"project_error"},"text":{}},{"id":5799,"name":"listing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":545,"name":"ListingsObject"},"text":{}},{"id":5800,"name":"active","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":5435,"name":"ExistingActiveDoc"},"text":{}},{"id":5801,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":181,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L181"}],"parentId":5782},{"id":5802,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5803,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"projects_sync_state"},"text":{}},{"id":5804,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5805,"name":"listing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":545,"name":"ListingsObject"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":187,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L187"}],"parentId":5782},{"id":5806,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5807,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"listing_update"},"text":{}},{"id":5808,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"literal","value":"delete"}]},{"type":"tuple","elements":[{"type":"literal","value":"create"}]},{"type":"tuple","elements":[{"type":"literal","value":"update"},{"type":"reference","id":6008,"name":"createdListingsInterface"}]}]},"text":{}},{"id":5809,"name":"projects_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5810,"name":"people_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}},{"id":5811,"name":"listing_id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":192,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L192"}],"parentId":5782},{"id":5812,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5813,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"listing_error"},"text":{}},{"id":5814,"name":"listing_id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"text":{}},{"id":5815,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":199,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L199"}],"parentId":5782},{"id":5816,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5817,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"listings_sync_state"},"text":{}},{"id":5818,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":200,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L200"}],"parentId":5782},{"id":5819,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5820,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"directory_error"},"text":{}},{"id":5821,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":201,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L201"}],"parentId":5782},{"id":5822,"name":"emit","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5823,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"all_state"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.emit","hash":"emit.emit"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":202,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L202"}],"parentId":5782}],"overwrites":{"type":"reference","name":"EventEmitter.emit"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"emit"},"text":{},"parentId":5709},{"id":5883,"name":"eventNames","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":632,"character":16}],"signatures":[{"id":5884,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "},{"kind":"code","text":"`Symbol`"},{"kind":"text","text":"s.\n\n"},{"kind":"code","text":"```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v6.0.0"}]}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},"inheritedFrom":{"type":"reference","name":"EventEmitter.eventNames"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.eventNames","hash":"eventNames.eventNames"},"text":{"comment":"<p>Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or <code>Symbol</code>s.</p>\n<pre><code class=\"language-js\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">EventEmitter</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">require</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>events<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">myEE</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">EventEmitter</span>();\n<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {});\n<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>bar<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {});\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">sym</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Symbol</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>symbol<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">on</span>(sym, () <span class=\"pl-k\">=></span> {});\n\n<span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">eventNames</span>());\n<span class=\"pl-c\">// Prints: [ 'foo', 'bar', Symbol(symbol) ]</span>\n</code></pre>\n<h5>Since:</h5><p>v6.0.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":632,"character":16}],"parentId":5883}],"inheritedFrom":{"type":"reference","name":"EventEmitter.eventNames"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"eventNames"},"text":{},"parentId":5709},{"id":5858,"name":"getMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":489,"character":16}],"signatures":[{"id":5859,"name":"getMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns the current max listener value for the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":" which is either\nset by "},{"kind":"code","text":"`emitter.setMaxListeners(n)`"},{"kind":"text","text":" or defaults to "},{"kind":"inline-tag","tag":"@link","text":"defaultMaxListeners"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v1.0.0"}]}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.getMaxListeners"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.getMaxListeners","hash":"getMaxListeners.getMaxListeners"},"text":{"comment":"<p>Returns the current max listener value for the <code>EventEmitter</code> which is either\nset by <code>emitter.setMaxListeners(n)</code> or defaults to <a href=\"undefined\">defaultMaxListeners</a>.</p>\n<h5>Since:</h5><p>v1.0.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":489,"character":16}],"parentId":5858}],"inheritedFrom":{"type":"reference","name":"EventEmitter.getMaxListeners"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"getMaxListeners"},"text":{},"parentId":5709},{"id":5866,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":579,"character":16}],"signatures":[{"id":5867,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of listeners listening to the event named "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v3.2.0"}]}]},"parameters":[{"id":5868,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the event being listened for"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{"comment":"<p>The name of the event being listened for</p>\n"}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.listenerCount","hash":"listenerCount.listenerCount"},"text":{"comment":"<p>Returns the number of listeners listening to the event named <code>eventName</code>.</p>\n<h5>Since:</h5><p>v3.2.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":579,"character":16}],"parentId":5866}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"listenerCount"},"text":{},"parentId":5709},{"id":5860,"name":"listeners","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":502,"character":16}],"signatures":[{"id":5861,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a copy of the array of listeners for the event named "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":".\n\n"},{"kind":"code","text":"```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v0.1.26"}]}]},"parameters":[{"id":5862,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{}}],"type":{"type":"array","elementType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.listeners"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.listeners","hash":"listeners.listeners"},"text":{"comment":"<p>Returns a copy of the array of listeners for the event named <code>eventName</code>.</p>\n<pre><code class=\"language-js\"><span class=\"pl-smi\">server</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-smi\">stream</span>) <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>someone connected!<span class=\"pl-pds\">'</span></span>);\n});\n<span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">util</span>.<span class=\"pl-en\">inspect</span>(<span class=\"pl-smi\">server</span>.<span class=\"pl-en\">listeners</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>)));\n<span class=\"pl-c\">// Prints: [ [Function] ]</span>\n</code></pre>\n<h5>Since:</h5><p>v0.1.26</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":502,"character":16}],"parentId":5860}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listeners"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"listeners"},"text":{},"parentId":5709},{"id":5845,"name":"off","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":462,"character":16}],"signatures":[{"id":5846,"name":"off","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`emitter.removeListener()`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v10.0.0"}]}]},"parameters":[{"id":5847,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{}},{"id":5848,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5849,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":462,"character":58}],"signatures":[{"id":5850,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":5851,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.off"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.off","hash":"off.off"},"text":{"comment":"<p>Alias for <code>emitter.removeListener()</code>.</p>\n<h5>Since:</h5><p>v10.0.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":462,"character":16}],"parentId":5845}],"inheritedFrom":{"type":"reference","name":"EventEmitter.off"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"off"},"text":{},"parentId":5709},{"id":5710,"name":"on","kind":2048,"kindString":"Method","flags":{"isOverride":true},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":56,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L56"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":69,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L69"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":86,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L86"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":95,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L95"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":112,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L112"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":128,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L128"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":137,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L137"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":148,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L148"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":152,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L152"},{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":162,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L162"}],"signatures":[{"id":5711,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"true event is triggered when  a Projects' meta DB is created or updated,\nand new data might start coming in\n\nThese events always come in  pairs: First the true, then the false.\n\nThe true event coincides with project_update event, only where\nmeta_changed: true"}]},"parameters":[{"id":5712,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"meta_sync_state"},"text":{}},{"id":5713,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5714,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":58,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L58"}],"signatures":[{"id":5715,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5716,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5717,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"ProjectEventInfo"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>true event is triggered when  a Projects&#39; meta DB is created or updated,\nand new data might start coming in</p>\n<p>These events always come in  pairs: First the true, then the false.</p>\n<p>The true event coincides with project_update event, only where\nmeta_changed: true</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":56,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L56"}],"parentId":5710},{"id":5718,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"true event is triggered when  a Projects' data DB is created or updated,\nand new data might start coming in\n\nThese events always come in  pairs: First the true, then the false.\n\nThe true event coincides with project_update event, only where\ndata_changed: true"}]},"parameters":[{"id":5719,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"data_sync_state"},"text":{}},{"id":5720,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5721,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":71,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L71"}],"signatures":[{"id":5722,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5723,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5724,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"ProjectEventInfo"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>true event is triggered when  a Projects&#39; data DB is created or updated,\nand new data might start coming in</p>\n<p>These events always come in  pairs: First the true, then the false.</p>\n<p>The true event coincides with project_update event, only where\ndata_changed: true</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":69,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L69"}],"parentId":5710},{"id":5725,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"Tracks changes to createdProjects from state.ts\nGuaranteed to trigger for each project in a listing before the listing's\nprojects_sync_state event is triggered with syncing: false,\nand before any changes might start occurring (so you can attach to .changes\nand not miss anything)\n\nAlso, if the data db in createdProjects[active._id] is new (i.e.\ndoesn't have any change listeners) data_changed is true.\nSame for meta_changed\n\n'update' type will give you the previous value"}]},"parameters":[{"id":5726,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"project_update"},"text":{}},{"id":5727,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5728,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":88,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L88"}],"signatures":[{"id":5729,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5730,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"literal","value":"update"},{"type":"reference","id":5998,"name":"createdProjectsInterface"}]},{"type":"tuple","elements":[{"type":"literal","value":"delete"}]},{"type":"tuple","elements":[{"type":"literal","value":"create"}]}]}},{"id":5731,"name":"meta_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5732,"name":"data_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5733,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","name":"ProjectEventInfo"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>Tracks changes to createdProjects from state.ts\nGuaranteed to trigger for each project in a listing before the listing&#39;s\nprojects_sync_state event is triggered with syncing: false,\nand before any changes might start occurring (so you can attach to .changes\nand not miss anything)</p>\n<p>Also, if the data db in createdProjects[active._id] is new (i.e.\ndoesn&#39;t have any change listeners) data_changed is true.\nSame for meta_changed</p>\n<p>&#39;update&#39; type will give you the previous value</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":86,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L86"}],"parentId":5710},{"id":5734,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5735,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"project_error"},"text":{}},{"id":5736,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5737,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":97,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L97"}],"signatures":[{"id":5738,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5739,"name":"listing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":545,"name":"ListingsObject"}},{"id":5740,"name":"active","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":5435,"name":"ExistingActiveDoc"}},{"id":5741,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":95,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L95"}],"parentId":5710},{"id":5742,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"true event is triggered when a Listing's project DB is created or updated,\nand new data might start coming in\n\nThese events always come in pairs: First the true, then the false.\n\nThe true event coincides with listing_update event, only where\nprojects_changed: true"}]},"parameters":[{"id":5743,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"projects_sync_state"},"text":{}},{"id":5744,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5745,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":114,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L114"}],"signatures":[{"id":5746,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5747,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5748,"name":"listing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":545,"name":"ListingsObject"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>true event is triggered when a Listing&#39;s project DB is created or updated,\nand new data might start coming in</p>\n<p>These events always come in pairs: First the true, then the false.</p>\n<p>The true event coincides with listing_update event, only where\nprojects_changed: true</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":112,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L112"}],"parentId":5710},{"id":5749,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"Tracks changes to createdListings from state.ts\nGuaranteed to trigger before listings_sync_state is set to syncing: false,\nand before any changes might start occurring (so you can attach to .changes\nand not miss anything)\n\nAlso, if the projects db in createdListings[listing._id] is new (i.e.\ndoesn't have any change listeners) projects_changed is true.\nSame for people_changed\n\n'update' type will give you the previous value"}]},"parameters":[{"id":5750,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"listing_update"},"text":{}},{"id":5751,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5752,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":130,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L130"}],"signatures":[{"id":5753,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5754,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"literal","value":"delete"}]},{"type":"tuple","elements":[{"type":"literal","value":"create"}]},{"type":"tuple","elements":[{"type":"literal","value":"update"},{"type":"reference","id":6008,"name":"createdListingsInterface"}]}]}},{"id":5755,"name":"projects_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5756,"name":"people_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5757,"name":"listing_id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>Tracks changes to createdListings from state.ts\nGuaranteed to trigger before listings_sync_state is set to syncing: false,\nand before any changes might start occurring (so you can attach to .changes\nand not miss anything)</p>\n<p>Also, if the projects db in createdListings[listing._id] is new (i.e.\ndoesn&#39;t have any change listeners) projects_changed is true.\nSame for people_changed</p>\n<p>&#39;update&#39; type will give you the previous value</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":128,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L128"}],"parentId":5710},{"id":5758,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5759,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"listing_error"},"text":{}},{"id":5760,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5761,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":139,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L139"}],"signatures":[{"id":5762,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5763,"name":"listing_id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":5764,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":137,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L137"}],"parentId":5710},{"id":5765,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"true event is triggered when FAIMS initializes\nfalse event is only triggered when all possible listing_updated events\nhave already ran (excluding updates not part of the initial sync)\n\nThese events always come in pairs: First the true, then the false."}]},"parameters":[{"id":5766,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"listings_sync_state"},"text":{}},{"id":5767,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5768,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":150,"character":14,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L150"}],"signatures":[{"id":5769,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5770,"name":"syncing","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>true event is triggered when FAIMS initializes\nfalse event is only triggered when all possible listing_updated events\nhave already ran (excluding updates not part of the initial sync)</p>\n<p>These events always come in pairs: First the true, then the false.</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":148,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L148"}],"parentId":5710},{"id":5771,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":5772,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"directory_error"},"text":{}},{"id":5773,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5774,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":152,"character":41,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L152"}],"signatures":[{"id":5775,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5776,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":152,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L152"}],"parentId":5710},{"id":5777,"name":"on","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"comment":{"summary":[{"kind":"text","text":"Emitted on any changes to do with projects appearing/disappearing,\nListings appearing/disappearing, or metadata/data finishing syncing\n\nThe intended use if for you to check all_{data,meta}_synced\nand all_projects_updated variables (or listing_projects_synced,\nprojects_{meta,data}_synced variables as well) as these are the\nvariables that this event signals updates for."}]},"parameters":[{"id":5778,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"all_state"},"text":{}},{"id":5779,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5780,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/events.ts","line":162,"character":35,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L162"}],"signatures":[{"id":5781,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.on","hash":"on.on"},"text":{"comment":"<p>Emitted on any changes to do with projects appearing/disappearing,\nListings appearing/disappearing, or metadata/data finishing syncing</p>\n<p>The intended use if for you to check all_{data,meta}<em>synced\nand all_projects_updated variables (or listing_projects_synced,\nprojects</em>{meta,data}_synced variables as well) as these are the\nvariables that this event signals updates for.</p>\n"},"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":162,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L162"}],"parentId":5710}],"overwrites":{"type":"reference","name":"EventEmitter.on"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"on"},"text":{},"parentId":5709},{"id":5831,"name":"once","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":377,"character":16}],"signatures":[{"id":5832,"name":"once","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a **one-time**"},{"kind":"code","text":"`listener`"},{"kind":"text","text":" function for the event named "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":". The\nnext time "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":" is triggered, this listener is removed and then invoked.\n\n"},{"kind":"code","text":"```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"},{"kind":"text","text":"\n\nReturns a reference to the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"},{"kind":"code","text":"`emitter.prependOnceListener()`"},{"kind":"text","text":" method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"},{"kind":"code","text":"```js\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v0.3.0"}]}]},"parameters":[{"id":5833,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the event."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{"comment":"<p>The name of the event.</p>\n"}},{"id":5834,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The callback function"}]},"type":{"type":"reflection","declaration":{"id":5835,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":377,"character":59}],"signatures":[{"id":5836,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":5837,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{"comment":"<p>The callback function</p>\n"}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.once"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.once","hash":"once.once"},"text":{"comment":"<p>Adds a <strong>one-time</strong><code>listener</code> function for the event named <code>eventName</code>. The\nnext time <code>eventName</code> is triggered, this listener is removed and then invoked.</p>\n<pre><code class=\"language-js\"><span class=\"pl-smi\">server</span>.<span class=\"pl-en\">once</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-smi\">stream</span>) <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Ah, we have our first user!<span class=\"pl-pds\">'</span></span>);\n});\n</code></pre>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n<p>By default, event listeners are invoked in the order they are added. The<code>emitter.prependOnceListener()</code> method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.</p>\n<pre><code class=\"language-js\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">myEE</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">EventEmitter</span>();\n<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">once</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>));\n<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">prependOnceListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>));\n<span class=\"pl-smi\">myEE</span>.<span class=\"pl-en\">emit</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c\">// Prints:</span>\n<span class=\"pl-c\">//   b</span>\n<span class=\"pl-c\">//   a</span>\n</code></pre>\n<h5>Since:</h5><p>v0.3.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":377,"character":16}],"parentId":5831}],"inheritedFrom":{"type":"reference","name":"EventEmitter.once"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"once"},"text":{},"parentId":5709},{"id":5869,"name":"prependListener","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":597,"character":16}],"signatures":[{"id":5870,"name":"prependListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds the "},{"kind":"code","text":"`listener`"},{"kind":"text","text":" function to the _beginning_ of the listeners array for the\nevent named "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":". No checks are made to see if the "},{"kind":"code","text":"`listener`"},{"kind":"text","text":" has\nalready been added. Multiple calls passing the same combination of "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":"and "},{"kind":"code","text":"`listener`"},{"kind":"text","text":" will result in the "},{"kind":"code","text":"`listener`"},{"kind":"text","text":" being added, and called, multiple\ntimes.\n\n"},{"kind":"code","text":"```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"},{"kind":"text","text":"\n\nReturns a reference to the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":", so that calls can be chained."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v6.0.0"}]}]},"parameters":[{"id":5871,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the event."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{"comment":"<p>The name of the event.</p>\n"}},{"id":5872,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The callback function"}]},"type":{"type":"reflection","declaration":{"id":5873,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":597,"character":70}],"signatures":[{"id":5874,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":5875,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{"comment":"<p>The callback function</p>\n"}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.prependListener"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.prependListener","hash":"prependListener.prependListener"},"text":{"comment":"<p>Adds the <code>listener</code> function to the <em>beginning</em> of the listeners array for the\nevent named <code>eventName</code>. No checks are made to see if the <code>listener</code> has\nalready been added. Multiple calls passing the same combination of <code>eventName</code>and <code>listener</code> will result in the <code>listener</code> being added, and called, multiple\ntimes.</p>\n<pre><code class=\"language-js\"><span class=\"pl-smi\">server</span>.<span class=\"pl-en\">prependListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-smi\">stream</span>) <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>someone connected!<span class=\"pl-pds\">'</span></span>);\n});\n</code></pre>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n<h5>Since:</h5><p>v6.0.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":597,"character":16}],"parentId":5869}],"inheritedFrom":{"type":"reference","name":"EventEmitter.prependListener"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"prependListener"},"text":{},"parentId":5709},{"id":5876,"name":"prependOnceListener","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":613,"character":16}],"signatures":[{"id":5877,"name":"prependOnceListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a **one-time**"},{"kind":"code","text":"`listener`"},{"kind":"text","text":" function for the event named "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":" to the _beginning_ of the listeners array. The next time "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":" is triggered, this\nlistener is removed, and then invoked.\n\n"},{"kind":"code","text":"```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"},{"kind":"text","text":"\n\nReturns a reference to the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":", so that calls can be chained."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v6.0.0"}]}]},"parameters":[{"id":5878,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the event."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{"comment":"<p>The name of the event.</p>\n"}},{"id":5879,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The callback function"}]},"type":{"type":"reflection","declaration":{"id":5880,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":613,"character":74}],"signatures":[{"id":5881,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":5882,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{"comment":"<p>The callback function</p>\n"}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.prependOnceListener"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.prependOnceListener","hash":"prependOnceListener.prependOnceListener"},"text":{"comment":"<p>Adds a <strong>one-time</strong><code>listener</code> function for the event named <code>eventName</code> to the <em>beginning</em> of the listeners array. The next time <code>eventName</code> is triggered, this\nlistener is removed, and then invoked.</p>\n<pre><code class=\"language-js\"><span class=\"pl-smi\">server</span>.<span class=\"pl-en\">prependOnceListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-smi\">stream</span>) <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Ah, we have our first user!<span class=\"pl-pds\">'</span></span>);\n});\n</code></pre>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n<h5>Since:</h5><p>v6.0.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":613,"character":16}],"parentId":5876}],"inheritedFrom":{"type":"reference","name":"EventEmitter.prependOnceListener"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"prependOnceListener"},"text":{},"parentId":5709},{"id":5863,"name":"rawListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":532,"character":16}],"signatures":[{"id":5864,"name":"rawListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a copy of the array of listeners for the event named "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":",\nincluding any wrappers (such as those created by "},{"kind":"code","text":"`.once()`"},{"kind":"text","text":").\n\n"},{"kind":"code","text":"```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v9.4.0"}]}]},"parameters":[{"id":5865,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{}}],"type":{"type":"array","elementType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"}},"inheritedFrom":{"type":"reference","name":"EventEmitter.rawListeners"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.rawListeners","hash":"rawListeners.rawListeners"},"text":{"comment":"<p>Returns a copy of the array of listeners for the event named <code>eventName</code>,\nincluding any wrappers (such as those created by <code>.once()</code>).</p>\n<pre><code class=\"language-js\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">emitter</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">EventEmitter</span>();\n<span class=\"pl-smi\">emitter</span>.<span class=\"pl-en\">once</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log once<span class=\"pl-pds\">'</span></span>));\n\n<span class=\"pl-c\">// Returns a new Array with a function `onceWrapper` which has a property</span>\n<span class=\"pl-c\">// `listener` which contains the original listener bound above</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">listeners</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">emitter</span>.<span class=\"pl-en\">rawListeners</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">logFnWrapper</span> <span class=\"pl-k\">=</span> listeners[<span class=\"pl-c1\">0</span>];\n\n<span class=\"pl-c\">// Logs \"log once\" to the console and does not unbind the `once` event</span>\n<span class=\"pl-smi\">logFnWrapper</span>.<span class=\"pl-en\">listener</span>();\n\n<span class=\"pl-c\">// Logs \"log once\" to the console and removes the listener</span>\n<span class=\"pl-en\">logFnWrapper</span>();\n\n<span class=\"pl-smi\">emitter</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log persistently<span class=\"pl-pds\">'</span></span>));\n<span class=\"pl-c\">// Will return a new Array with a single function bound by `.on()` above</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">newListeners</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">emitter</span>.<span class=\"pl-en\">rawListeners</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log<span class=\"pl-pds\">'</span></span>);\n\n<span class=\"pl-c\">// Logs \"log persistently\" twice</span>\nnewListeners[<span class=\"pl-c1\">0</span>]();\n<span class=\"pl-smi\">emitter</span>.<span class=\"pl-en\">emit</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>log<span class=\"pl-pds\">'</span></span>);\n</code></pre>\n<h5>Since:</h5><p>v9.4.0</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":532,"character":16}],"parentId":5863}],"inheritedFrom":{"type":"reference","name":"EventEmitter.rawListeners"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"rawListeners"},"text":{},"parentId":5709},{"id":5852,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":473,"character":16}],"signatures":[{"id":5853,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners, or those of the specified "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":" instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":", so that calls can be chained."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v0.1.26"}]}]},"parameters":[{"id":5854,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.removeAllListeners","hash":"removeAllListeners.removeAllListeners"},"text":{"comment":"<p>Removes all listeners, or those of the specified <code>eventName</code>.</p>\n<p>It is bad practice to remove listeners added elsewhere in the code,\nparticularly when the <code>EventEmitter</code> instance was created by some other\ncomponent or module (e.g. sockets or file streams).</p>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n<h5>Since:</h5><p>v0.1.26</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":473,"character":16}],"parentId":5852}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"removeAllListeners"},"text":{},"parentId":5709},{"id":5838,"name":"removeListener","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":457,"character":16}],"signatures":[{"id":5839,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes the specified "},{"kind":"code","text":"`listener`"},{"kind":"text","text":" from the listener array for the event named"},{"kind":"code","text":"`eventName`"},{"kind":"text","text":".\n\n"},{"kind":"code","text":"```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"},{"kind":"text","text":"\n\n"},{"kind":"code","text":"`removeListener()`"},{"kind":"text","text":" will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "},{"kind":"code","text":"`eventName`"},{"kind":"text","text":", then "},{"kind":"code","text":"`removeListener()`"},{"kind":"text","text":" must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"},{"kind":"code","text":"`removeListener()`"},{"kind":"text","text":" or "},{"kind":"code","text":"`removeAllListeners()`"},{"kind":"text","text":" calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"},{"kind":"code","text":"`emit()`"},{"kind":"text","text":" in progress. Subsequent events behave as expected.\n\n"},{"kind":"code","text":"```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"},{"kind":"text","text":"\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "},{"kind":"code","text":"`emitter.listeners()`"},{"kind":"text","text":" method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "},{"kind":"code","text":"`removeListener()`"},{"kind":"text","text":" will remove the most\nrecently added instance. In the example the "},{"kind":"code","text":"`once('ping')`"},{"kind":"text","text":"listener is removed:\n\n"},{"kind":"code","text":"```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"},{"kind":"text","text":"\n\nReturns a reference to the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":", so that calls can be chained."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v0.1.26"}]}]},"parameters":[{"id":5840,"name":"eventName","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]},"text":{}},{"id":5841,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5842,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","line":457,"character":69}],"signatures":[{"id":5843,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":5844,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.removeListener","hash":"removeListener.removeListener"},"text":{"comment":"<p>Removes the specified <code>listener</code> from the listener array for the event named<code>eventName</code>.</p>\n<pre><code class=\"language-js\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">callback</span> <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">stream</span>) <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>someone connected!<span class=\"pl-pds\">'</span></span>);\n};\n<span class=\"pl-smi\">server</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>, callback);\n<span class=\"pl-c\">// ...</span>\n<span class=\"pl-smi\">server</span>.<span class=\"pl-en\">removeListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>connection<span class=\"pl-pds\">'</span></span>, callback);\n</code></pre>\n<p><code>removeListener()</code> will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified <code>eventName</code>, then <code>removeListener()</code> must be\ncalled multiple times to remove each instance.</p>\n<p>Once an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any<code>removeListener()</code> or <code>removeAllListeners()</code> calls <em>after</em> emitting and <em>before</em> the last listener finishes execution\nwill not remove them from<code>emit()</code> in progress. Subsequent events behave as expected.</p>\n<pre><code class=\"language-js\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">myEmitter</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">MyEmitter</span>();\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">callbackA</span> <span class=\"pl-k\">=</span> () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>A<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-smi\">myEmitter</span>.<span class=\"pl-en\">removeListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>event<span class=\"pl-pds\">'</span></span>, callbackB);\n};\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">callbackB</span> <span class=\"pl-k\">=</span> () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>B<span class=\"pl-pds\">'</span></span>);\n};\n\n<span class=\"pl-smi\">myEmitter</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>event<span class=\"pl-pds\">'</span></span>, callbackA);\n\n<span class=\"pl-smi\">myEmitter</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>event<span class=\"pl-pds\">'</span></span>, callbackB);\n\n<span class=\"pl-c\">// callbackA removes listener callbackB but it will still be called.</span>\n<span class=\"pl-c\">// Internal listener array at time of emit [callbackA, callbackB]</span>\n<span class=\"pl-smi\">myEmitter</span>.<span class=\"pl-en\">emit</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>event<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c\">// Prints:</span>\n<span class=\"pl-c\">//   A</span>\n<span class=\"pl-c\">//   B</span>\n\n<span class=\"pl-c\">// callbackB is now removed.</span>\n<span class=\"pl-c\">// Internal listener array [callbackA]</span>\n<span class=\"pl-smi\">myEmitter</span>.<span class=\"pl-en\">emit</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>event<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c\">// Prints:</span>\n<span class=\"pl-c\">//   A</span>\n</code></pre>\n<p>Because listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered <em>after</em> the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe <code>emitter.listeners()</code> method will need to be recreated.</p>\n<p>When a single function has been added as a handler multiple times for a single\nevent (as in the example below), <code>removeListener()</code> will remove the most\nrecently added instance. In the example the <code>once(&#39;ping&#39;)</code>listener is removed:</p>\n<pre><code class=\"language-js\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">ee</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">EventEmitter</span>();\n\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">pong</span>() {\n  <span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>pong<span class=\"pl-pds\">'</span></span>);\n}\n\n<span class=\"pl-smi\">ee</span>.<span class=\"pl-en\">on</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ping<span class=\"pl-pds\">'</span></span>, pong);\n<span class=\"pl-smi\">ee</span>.<span class=\"pl-en\">once</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ping<span class=\"pl-pds\">'</span></span>, pong);\n<span class=\"pl-smi\">ee</span>.<span class=\"pl-en\">removeListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ping<span class=\"pl-pds\">'</span></span>, pong);\n\n<span class=\"pl-smi\">ee</span>.<span class=\"pl-en\">emit</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ping<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-smi\">ee</span>.<span class=\"pl-en\">emit</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ping<span class=\"pl-pds\">'</span></span>);\n</code></pre>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n<h5>Since:</h5><p>v0.1.26</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":457,"character":16}],"parentId":5838}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"removeListener"},"text":{},"parentId":5709},{"id":5855,"name":"setMaxListeners","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":483,"character":16}],"signatures":[{"id":5856,"name":"setMaxListeners","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"By default "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":"s will print a warning if more than "},{"kind":"code","text":"`10`"},{"kind":"text","text":" listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "},{"kind":"code","text":"`emitter.setMaxListeners()`"},{"kind":"text","text":" method allows the limit to be\nmodified for this specific "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":" instance. The value can be set to"},{"kind":"code","text":"`Infinity`"},{"kind":"text","text":" (or "},{"kind":"code","text":"`0`"},{"kind":"text","text":") to indicate an unlimited number of listeners.\n\nReturns a reference to the "},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":", so that calls can be chained."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"v0.3.5"}]}]},"parameters":[{"id":5857,"name":"n","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"},"text":{}}],"type":{"type":"reference","id":5709,"name":"DirectoryEmitter"},"inheritedFrom":{"type":"reference","name":"EventEmitter.setMaxListeners"},"is":{"declaration":false},"location":{"query":"sync/events.DirectoryEmitter.Method.setMaxListeners","hash":"setMaxListeners.setMaxListeners"},"text":{"comment":"<p>By default <code>EventEmitter</code>s will print a warning if more than <code>10</code> listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The <code>emitter.setMaxListeners()</code> method allows the limit to be\nmodified for this specific <code>EventEmitter</code> instance. The value can be set to<code>Infinity</code> (or <code>0</code>) to indicate an unlimited number of listeners.</p>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n<h5>Since:</h5><p>v0.3.5</p>\n"},"sources":[{"fileName":"node_modules/@types/node/events.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/node/events.d.ts","line":483,"character":16}],"parentId":5855}],"inheritedFrom":{"type":"reference","name":"EventEmitter.setMaxListeners"},"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":"setMaxListeners"},"text":{},"parentId":5709}],"groups":[{"title":"Methods","children":[5824,5782,5883,5858,5866,5860,5845,5710,5831,5869,5876,5863,5852,5838,5855]}],"sources":[{"fileName":"src/sync/events.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/events.ts","line":46,"character":17,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/events.ts#L46"}],"extendedTypes":[{"type":"reference","name":"EventEmitter","qualifiedName":"EventEmitter","package":"@types/node"}],"is":{"declaration":true},"location":{"query":"sync/events.Interface.DirectoryEmitter","hash":""},"text":{},"parentId":5599,"hierarchy":[{"name":"EventEmitter","children":[{"name":"DirectoryEmitter","isTarget":true,"linkId":"5709"}]}]}

{"id":5894,"name":"listenProject","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"src/sync/index.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/index.ts","line":150,"character":16,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L150"}],"signatures":[{"id":5895,"name":"listenProject","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows you to listen for changes from a Project's Data/Meta DBs or other\nproject info like if it's to be synced or not (from createdProjects)\nThis is a working alternative to getDataDB.changes\n(as getDataDB.changes that may detach after updates to the owning listing\nor the owning active DB, or if the sync is toggled on/off)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Detach function: call this to stop all changes"}]}]},"parameters":[{"id":5896,"name":"project_id","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Full Project ID to listen on the DB for."}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Full Project ID to listen on the DB for.</p>\n"}},{"id":5897,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Called whenever the project you're listening on is available\n    __Not necessarily has the data or metadata fully synced__\n    But the data & metadata dbs will be in data_dbs, meta_dbs,\n    and createdProjects.\n    * meta_changed and data_changed events flow from\n    the 'project_update' event in events.ts, and signal if the\n    PouchDB databases have been recreated (and might need to\n    be re-listened on)\n    * error is available for the listener to call to asynchronously\n    throw errors up to the error_listener. Use this instead of\n    what you give into error_listener to ensure cleanup is done.\n    * returns a destructor: This destructor is called when either\n      * listenProject's destructor is called\n      * Errors occur that mean we stop listening\n      * The project info is *updated* (replaced will be true)\n      * The project info is dropped (e.g. the user left)\n    * Returning _'keep'_ changes behaviour: If this is a project info update,\n      the destructor previously returned or kept from listener isn't run,\n      and in fact, sticks around until next listener() (not returning keep)\n      or other detach/error scenario.\n    * Returning _'noop'_ returns a constructor doing nothing\n      (This is not 'void' )"}]},"type":{"type":"reflection","declaration":{"id":5898,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/index.ts","line":156,"character":12,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L156"}],"signatures":[{"id":5899,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5900,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":5998,"name":"createdProjectsInterface"}},{"id":5901,"name":"throw_error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5902,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/index.ts","line":158,"character":17,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L158"}],"signatures":[{"id":5903,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5904,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":5905,"name":"meta_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":5906,"name":"data_changed","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"literal","value":"keep"},{"type":"literal","value":"noop"},{"type":"reflection","declaration":{"id":5907,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/index.ts","line":161,"character":26,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L161"}],"signatures":[{"id":5908,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5909,"name":"replaced","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}]}}]}}]}},"text":{"comment":"<p>Called whenever the project you&#39;re listening on is available\n    <strong>Not necessarily has the data or metadata fully synced</strong>\n    But the data &amp; metadata dbs will be in data_dbs, meta_dbs,\n    and createdProjects.\n    * meta_changed and data_changed events flow from\n    the &#39;project_update&#39; event in events.ts, and signal if the\n    PouchDB databases have been recreated (and might need to\n    be re-listened on)\n    * error is available for the listener to call to asynchronously\n    throw errors up to the error_listener. Use this instead of\n    what you give into error_listener to ensure cleanup is done.\n    * returns a destructor: This destructor is called when either\n      * listenProject&#39;s destructor is called\n      * Errors occur that mean we stop listening\n      * The project info is <em>updated</em> (replaced will be true)\n      * The project info is dropped (e.g. the user left)\n    * Returning <em>&#39;keep&#39;</em> changes behaviour: If this is a project info update,\n      the destructor previously returned or kept from listener isn&#39;t run,\n      and in fact, sticks around until next listener() (not returning keep)\n      or other detach/error scenario.\n    * Returning <em>&#39;noop&#39;</em> returns a constructor doing nothing\n      (This is not &#39;void&#39; )</p>\n"}},{"id":5910,"name":"error_listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Called once at the first error condition.\n    * All projects are synced, but project_id isn't a known project\n    * errors in listener()\n    * errors thrown asynchronously form listener\n    * errors in the destructor from listener"}]},"type":{"type":"reflection","declaration":{"id":5911,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/index.ts","line":162,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L162"}],"signatures":[{"id":5912,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5913,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"any"}}]}},"text":{"comment":"<p>Called once at the first error condition.\n    * All projects are synced, but project_id isn&#39;t a known project\n    * errors in listener()\n    * errors thrown asynchronously form listener\n    * errors in the destructor from listener</p>\n"}}],"type":{"type":"reflection","declaration":{"id":5914,"name":"listenProject","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/index.ts","line":163,"character":3,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L163"}],"signatures":[{"id":5915,"name":"listenProject","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"sync.Function.listenProject","hash":"listenProject.__type"},"text":{},"parentId":5894}],"location":{"query":"sync.Function.listenProject","hash":"listenProject"}}},"is":{"declaration":false},"location":{"query":"sync.Function.listenProject","hash":"listenProject"},"text":{"comment":"<p>Allows you to listen for changes from a Project&#39;s Data/Meta DBs or other\nproject info like if it&#39;s to be synced or not (from createdProjects)\nThis is a working alternative to getDataDB.changes\n(as getDataDB.changes that may detach after updates to the owning listing\nor the owning active DB, or if the sync is toggled on/off)</p>\n<h5>Returns:</h5><p>Detach function: call this to stop all changes</p>\n"},"sources":[{"fileName":"src/sync/index.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/sync/index.ts","line":150,"character":0,"url":"https://github.com/FAIMS/FAIMS3/blob/766d1cb2/src/sync/index.ts#L150"}],"parentId":5894}],"is":{"declaration":true},"location":{"query":"sync.Function.listenProject","hash":""},"text":{},"parentId":5885}

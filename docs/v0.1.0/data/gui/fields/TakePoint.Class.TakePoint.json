{"id":3670,"name":"TakePoint","kind":128,"kindString":"Class","flags":{},"children":[{"id":3676,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":481,"character":8},{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":486,"character":8}],"signatures":[{"id":3677,"name":"constructor","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true,"isInherited":true},"parameters":[{"id":3678,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3679,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3680,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3681,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3682,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3684,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3685,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3683,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3686,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3687,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3688,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3689,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3690,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3691,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3692,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3680,3681,3682,3684,3685,3683,3686,3687,3688,3689,3690,3691,3692]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3693,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3703,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3707,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3694,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3695,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3696,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3697,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3699,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3700,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3698,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3701,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3702,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3704,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3705,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3706,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3708,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3703,3707,3694,3695,3696,3697,3699,3700,3698,3701,3702,3704,3705,3706,3708]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3709,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3710,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3711,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3712,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3713,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3710]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3714,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3716,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3717,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3715,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3716,3717,3715]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3718,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3719,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3720,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3721,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3723,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3724,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3722,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3725,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3726,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3727,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3728,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3729,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3730,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3731,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3719,3720,3721,3723,3724,3722,3725,3726,3727,3728,3729,3730,3731]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3732,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3742,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3746,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3733,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3734,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3735,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3736,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3738,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3739,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3737,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3740,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3741,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3743,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3744,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3745,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3747,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3742,3746,3733,3734,3735,3736,3738,3739,3737,3740,3741,3743,3744,3745,3747]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3748,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3749,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3750,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3751,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3752,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3749]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3753,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3755,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3756,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3754,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3755,3756,3754]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}]},"text":{}}],"type":{"type":"reference","id":3670,"name":"TakePoint"},"inheritedFrom":{"type":"reference","name":"React.Component<\n  FieldProps &\n    Props &\n    ButtonProps & {\n      ValueTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      ErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      NoErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n    }\n>.constructor"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Constructor.constructor","hash":"constructor.new TakePoint"},"text":{},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":481,"character":8}],"parentId":3676},{"id":3757,"name":"constructor","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[]},{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/legacy-context.html"}]}]},"parameters":[{"id":3758,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3759,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3760,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3761,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3762,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3764,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3765,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3763,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3766,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3767,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3768,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3769,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3770,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3771,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3772,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3760,3761,3762,3764,3765,3763,3766,3767,3768,3769,3770,3771,3772]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3773,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3783,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3787,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3774,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3775,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3776,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3777,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3779,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3780,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3778,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3781,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3782,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3784,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3785,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3786,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3788,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3783,3787,3774,3775,3776,3777,3779,3780,3778,3781,3782,3784,3785,3786,3788]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3789,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3790,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3791,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3792,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3793,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3790]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3794,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3796,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3797,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3795,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3796,3797,3795]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]},"text":{}},{"id":3798,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"reference","id":3670,"name":"TakePoint"},"inheritedFrom":{"type":"reference","name":"React.Component<\n  FieldProps &\n    Props &\n    ButtonProps & {\n      ValueTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      ErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      NoErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n    }\n>.constructor"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Constructor.constructor","hash":"constructor.new TakePoint"},"text":{"comment":"<h5>Deprecated:</h5><h5>See:</h5><p><a href=\"https://reactjs.org/docs/legacy-context.html\">https://reactjs.org/docs/legacy-context.html</a></p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":486,"character":8}],"parentId":3676}],"inheritedFrom":{"type":"reference","name":"React.Component<\n  FieldProps &\n    Props &\n    ButtonProps & {\n      ValueTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      ErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      NoErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n    }\n>.constructor"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"constructor"},"text":{},"parentId":3670},{"id":3809,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"If using the new style context, re-declare this in your class to be the\n"},{"kind":"code","text":"`React.ContextType`"},{"kind":"text","text":" of your "},{"kind":"code","text":"`static contextType`"},{"kind":"text","text":".\nShould be used with type annotation or static contextType.\n\n"},{"kind":"code","text":"```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/context.html"}]}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":479,"character":8}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"context"},"text":{"comment":"<p>If using the new style context, re-declare this in your class to be the\n<code>React.ContextType</code> of your <code>static contextType</code>.\nShould be used with type annotation or static contextType.</p>\n<pre><code class=\"language-ts\"><span class=\"pl-smi\">static</span> <span class=\"pl-smi\">contextType</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">MyContext</span>\n<span class=\"pl-c\">// For TS pre-3.7:</span>\n<span class=\"pl-smi\">context</span><span class=\"pl-k\">!</span>: <span class=\"pl-smi\">React</span>.<span class=\"pl-smi\">ContextType</span><span class=\"pl-k\">&#x3C;typeof</span> <span class=\"pl-smi\">MyContext</span><span class=\"pl-k\">></span>\n<span class=\"pl-c\">// For TS 3.7 and above:</span>\n<span class=\"pl-k\">declare</span> <span class=\"pl-en\">context</span>: <span class=\"pl-smi\">React</span>.<span class=\"pl-smi\">ContextType</span><span class=\"pl-k\">&#x3C;typeof</span> <span class=\"pl-smi\">MyContext</span><span class=\"pl-k\">></span>\n</code></pre>\n<h5>See:</h5><p><a href=\"https://reactjs.org/docs/context.html\">https://reactjs.org/docs/context.html</a></p>\n"},"parentId":3670},{"id":3870,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":504,"character":17}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3871,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3872,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3873,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3874,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3876,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3877,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3875,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3878,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3879,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3880,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3881,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3882,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3883,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3884,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3872,3873,3874,3876,3877,3875,3878,3879,3880,3881,3882,3883,3884]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3885,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3895,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3899,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3886,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3887,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3888,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3889,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3891,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3892,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3890,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3893,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3894,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3896,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3897,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3898,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3900,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3895,3899,3886,3887,3888,3889,3891,3892,3890,3893,3894,3896,3897,3898,3900]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3901,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3902,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3903,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3904,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3905,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3902]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3906,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3908,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3909,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3907,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3908,3909,3907]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3910,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3911,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":504,"character":49}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3911]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":504,"character":47}]}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"props"},"text":{},"parentId":3670},{"id":3914,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"}]}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":510,"character":8}],"type":{"type":"reflection","declaration":{"id":3915,"name":"refs","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":510,"character":14}],"indexSignature":{"id":3916,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3917,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance","qualifiedName":"React.ReactInstance","package":"@types/react"}},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"refs"}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"refs"},"text":{"comment":"<h5>Deprecated:</h5><p><a href=\"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\">https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs</a></p>\n"},"parentId":3670},{"id":3912,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":505,"character":8}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3913,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","name":"React.Component.state"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"state"},"text":{},"parentId":3670},{"id":3675,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"If set, "},{"kind":"code","text":"`this.context`"},{"kind":"text","text":" will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"},{"kind":"code","text":"```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/context.html#classcontexttype"}]}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":461,"character":15}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context","qualifiedName":"React.Context","package":"@types/react"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"contextType"},"text":{"comment":"<p>If set, <code>this.context</code> will be set at runtime to the current value of the given Context.</p>\n<p>Usage:</p>\n<pre><code class=\"language-ts\"><span class=\"pl-k\">type</span> <span class=\"pl-en\">MyContext</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">number</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">Ctx</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">React</span>.<span class=\"pl-en\">createContext</span>&#x3C;<span class=\"pl-en\">MyContext</span>>(<span class=\"pl-c1\">0</span>)\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Foo</span> <span class=\"pl-k\">extends</span> <span class=\"pl-en\">React</span>.<span class=\"pl-e\">Component</span> {\n  <span class=\"pl-k\">static</span> <span class=\"pl-v\">contextType</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Ctx</span>\n  <span class=\"pl-v\">context</span><span class=\"pl-k\">!:</span> <span class=\"pl-en\">React</span>.<span class=\"pl-en\">ContextType</span>&#x3C;<span class=\"pl-k\">typeof</span> <span class=\"pl-smi\">Ctx</span>>\n  <span class=\"pl-en\">render</span> () {\n    <span class=\"pl-k\">return</span> &#x3C;><span class=\"pl-smi\">My</span> <span class=\"pl-smi\">context</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>s value: {this.context}&#x3C;/><span class=\"pl-ii\">;</span></span>\n  }\n}\n</code></pre>\n<h5>See:</h5><p><a href=\"https://reactjs.org/docs/context.html#classcontexttype\">https://reactjs.org/docs/context.html#classcontexttype</a></p>\n"},"parentId":3670},{"id":4062,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":717,"character":8}],"signatures":[{"id":4063,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before mounting occurs, and before "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use componentDidMount or the constructor instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.UNSAFE_componentWillMount","hash":"UNSAFE_componentWillMount.UNSAFE_componentWillMount"},"text":{"comment":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use componentDidMount or the constructor instead</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":717,"character":8}],"parentId":4062}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"UNSAFE_componentWillMount"},"text":{},"parentId":3670},{"id":4107,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":749,"character":8}],"signatures":[{"id":4108,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use static getDerivedStateFromProps instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":4109,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":4110,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4111,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4112,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4113,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":4115,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4116,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4114,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4117,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4118,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4119,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4120,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":4121,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4122,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4123,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[4111,4112,4113,4115,4116,4114,4117,4118,4119,4120,4121,4122,4123]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4124,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4134,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":4138,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4125,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":4126,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4127,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4128,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4130,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4131,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4129,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4132,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4133,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4135,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":4136,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4137,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4139,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4134,4138,4125,4126,4127,4128,4130,4131,4129,4132,4133,4135,4136,4137,4139]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":4140,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4141,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":4142,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":4143,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":4144,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[4141]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":4145,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4147,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4148,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4146,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4147,4148,4146]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4149,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.UNSAFE_componentWillReceiveProps","hash":"UNSAFE_componentWillReceiveProps.UNSAFE_componentWillReceiveProps"},"text":{"comment":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use static getDerivedStateFromProps instead</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":749,"character":8}],"parentId":4107}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"UNSAFE_componentWillReceiveProps"},"text":{},"parentId":3670},{"id":4195,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":777,"character":8}],"signatures":[{"id":4196,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use getSnapshotBeforeUpdate instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":4197,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":4198,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4199,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4200,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4201,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":4203,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4204,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4202,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4205,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4206,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4207,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4208,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":4209,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4210,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4211,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[4199,4200,4201,4203,4204,4202,4205,4206,4207,4208,4209,4210,4211]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4212,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4222,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":4226,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4213,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":4214,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4215,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4216,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4218,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4219,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4217,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4220,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4221,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4223,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":4224,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4225,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4227,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4222,4226,4213,4214,4215,4216,4218,4219,4217,4220,4221,4223,4224,4225,4227]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":4228,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4229,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":4230,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":4231,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":4232,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[4229]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":4233,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4235,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4236,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4234,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4235,4236,4234]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4237,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4238,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4239,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.UNSAFE_componentWillUpdate","hash":"UNSAFE_componentWillUpdate.UNSAFE_componentWillUpdate"},"text":{"comment":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use getSnapshotBeforeUpdate instead</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":777,"character":8}],"parentId":4195}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"UNSAFE_componentWillUpdate"},"text":{},"parentId":3670},{"id":3967,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":646,"character":8}],"signatures":[{"id":3968,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."}]},"parameters":[{"id":3969,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"},"text":{}},{"id":3970,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo","qualifiedName":"React.ErrorInfo","package":"@types/react"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentDidCatch","hash":"componentDidCatch.componentDidCatch"},"text":{"comment":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":646,"character":8}],"parentId":3967}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentDidCatch"},"text":{},"parentId":3670},{"id":3918,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":625,"character":8}],"signatures":[{"id":3919,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentDidMount","hash":"componentDidMount.componentDidMount"},"text":{"comment":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":625,"character":8}],"parentId":3918}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentDidMount"},"text":{},"parentId":3670},{"id":4015,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":688,"character":8}],"signatures":[{"id":4016,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."}]},"parameters":[{"id":4017,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":4018,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4019,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4020,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4021,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":4023,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4024,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4022,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4025,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4026,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4027,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4028,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":4029,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4030,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4031,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[4019,4020,4021,4023,4024,4022,4025,4026,4027,4028,4029,4030,4031]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4032,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4042,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":4046,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4033,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":4034,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4035,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4036,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4038,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4039,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4037,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4040,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4041,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4043,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":4044,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4045,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4047,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4042,4046,4033,4034,4035,4036,4038,4039,4037,4040,4041,4043,4044,4045,4047]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":4048,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4049,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":4050,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":4051,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":4052,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[4049]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":4053,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4055,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4056,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4054,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4055,4056,4054]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4057,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4058,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4059,"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentDidUpdate","hash":"componentDidUpdate.componentDidUpdate"},"text":{"comment":"<p>Called immediately after updating occurs. Not called for the initial render.</p>\n<p>The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":688,"character":8}],"parentId":4015}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentDidUpdate"},"text":{},"parentId":3670},{"id":4060,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":703,"character":8}],"signatures":[{"id":4061,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before mounting occurs, and before "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentWillMount","hash":"componentWillMount.componentWillMount"},"text":{"comment":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use componentDidMount or the constructor instead; will stop working in React 17</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":703,"character":8}],"parentId":4060}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentWillMount"},"text":{},"parentId":3670},{"id":4064,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":732,"character":8}],"signatures":[{"id":4065,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":4066,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":4067,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4068,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4069,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4070,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":4072,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4073,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4071,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4074,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4075,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4076,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4077,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":4078,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4079,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4080,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[4068,4069,4070,4072,4073,4071,4074,4075,4076,4077,4078,4079,4080]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4081,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4091,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":4095,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4082,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":4083,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4084,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4085,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4087,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4088,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4086,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4089,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4090,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4092,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":4093,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4094,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4096,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4091,4095,4082,4083,4084,4085,4087,4088,4086,4089,4090,4092,4093,4094,4096]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":4097,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4098,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":4099,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":4100,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":4101,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[4098]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":4102,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4104,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4105,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4103,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4104,4105,4103]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4106,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentWillReceiveProps","hash":"componentWillReceiveProps.componentWillReceiveProps"},"text":{"comment":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use static getDerivedStateFromProps instead; will stop working in React 17</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":732,"character":8}],"parentId":4064}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentWillReceiveProps"},"text":{},"parentId":3670},{"id":3965,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":641,"character":8}],"signatures":[{"id":3966,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "},{"kind":"code","text":"`componentDidMount`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentWillUnmount","hash":"componentWillUnmount.componentWillUnmount"},"text":{"comment":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":641,"character":8}],"parentId":3965}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentWillUnmount"},"text":{},"parentId":3670},{"id":4150,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":762,"character":8}],"signatures":[{"id":4151,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":4152,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":4153,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4154,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4155,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4156,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":4158,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4159,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4157,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4160,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4161,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4162,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4163,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":4164,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4165,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4166,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[4154,4155,4156,4158,4159,4157,4160,4161,4162,4163,4164,4165,4166]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4167,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4177,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":4181,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4168,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":4169,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4170,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":4171,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":4173,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4174,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4172,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4175,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4176,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4178,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":4179,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4180,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4182,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4177,4181,4168,4169,4170,4171,4173,4174,4172,4175,4176,4178,4179,4180,4182]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":4183,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4184,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":4185,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":4186,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":4187,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[4184]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":4188,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4190,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4191,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4189,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4190,4191,4189]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4192,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4193,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4194,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.componentWillUpdate","hash":"componentWillUpdate.componentWillUpdate"},"text":{"comment":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":762,"character":8}],"parentId":4150}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"componentWillUpdate"},"text":{},"parentId":3670},{"id":3865,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":496,"character":8}],"signatures":[{"id":3866,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"parameters":[{"id":3867,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":3868,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":496,"character":31}],"signatures":[{"id":3869,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.forceUpdate","hash":"forceUpdate.forceUpdate"},"text":{},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":496,"character":8}],"parentId":3865}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"forceUpdate"},"text":{},"parentId":3670},{"id":3799,"name":"getPositionOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":71,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L71"}],"signatures":[{"id":3800,"name":"getPositionOptions","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reflection","declaration":{"id":3801,"name":"getPositionOptions","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3802,"name":"enableHighAccuracy","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":76,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L76"}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"...","is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.getPositionOptions","hash":"getPositionOptions.getPositionOptions.enableHighAccuracy"},"text":{},"parentId":3799},{"id":3804,"name":"maximumAge","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":80,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L80"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"...","is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.getPositionOptions","hash":"getPositionOptions.getPositionOptions.maximumAge"},"text":{},"parentId":3799},{"id":3803,"name":"timeout","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":78,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L78"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"...","is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.getPositionOptions","hash":"getPositionOptions.getPositionOptions.timeout"},"text":{},"parentId":3799}],"groups":[{"title":"Properties","children":[3802,3804,3803]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":72,"character":11,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L72"}],"location":{"query":"gui/fields/TakePoint.TakePoint.Method.getPositionOptions","hash":"getPositionOptions.getPositionOptions"}}},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.getPositionOptions","hash":"getPositionOptions.getPositionOptions"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":71,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L71"}],"parentId":3799}],"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"getPositionOptions"},"text":{},"parentId":3670},{"id":3971,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":682,"character":8}],"signatures":[{"id":3972,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Runs before React applies the result of "},{"kind":"code","text":"`render`"},{"kind":"text","text":" to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "},{"kind":"code","text":"`render`"},{"kind":"text","text":" causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."}]},"parameters":[{"id":3973,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3974,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3975,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3976,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3977,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3979,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3980,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3978,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3981,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3982,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3983,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3984,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3985,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3986,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3987,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3975,3976,3977,3979,3980,3978,3981,3982,3983,3984,3985,3986,3987]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3988,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3998,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":4002,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3989,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3990,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3991,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3992,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3994,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3995,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3993,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3996,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3997,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3999,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":4000,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":4001,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4003,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3998,4002,3989,3990,3991,3992,3994,3995,3993,3996,3997,3999,4000,4001,4003]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":4004,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4005,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":4006,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":4007,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":4008,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[4005]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":4009,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4011,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4012,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":4010,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[4011,4012,4010]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":4013,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4014,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.getSnapshotBeforeUpdate","hash":"getSnapshotBeforeUpdate.getSnapshotBeforeUpdate"},"text":{"comment":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":682,"character":8}],"parentId":3971}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"getSnapshotBeforeUpdate"},"text":{},"parentId":3670},{"id":3807,"name":"render","kind":2048,"kindString":"Method","flags":{"isOverride":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":96,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L96"}],"signatures":[{"id":3808,"name":"render","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"},"overwrites":{"type":"reference","name":"React.Component.render"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.render","hash":"render.render"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":96,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L96"}],"parentId":3807}],"overwrites":{"type":"reference","name":"React.Component.render"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"render"},"text":{},"parentId":3670},{"id":3810,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":491,"character":8}],"signatures":[{"id":3811,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"typeParameter":[{"id":3812,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"id":3813,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3814,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":3815,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":492,"character":20}],"signatures":[{"id":3816,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3817,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3818,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"id":3819,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3820,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3821,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3822,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3823,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3825,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3826,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3824,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3827,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3828,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3829,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3830,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3831,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3832,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3833,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3821,3822,3823,3825,3826,3824,3827,3828,3829,3830,3831,3832,3833]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3834,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3844,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3848,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3835,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3836,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3837,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3838,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3840,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3841,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3839,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3842,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3843,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3845,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3846,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3847,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3849,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3844,3848,3835,3836,3837,3838,3840,3841,3839,3842,3843,3845,3846,3847,3849]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3850,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3851,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3852,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3853,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3854,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3851]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3855,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3857,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3858,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3856,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3857,3858,3856]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3859,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3860,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","id":1168,"name":"K","qualifiedName":"K","package":"@types/react"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3861,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","id":1168,"name":"K","qualifiedName":"K","package":"@types/react"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}]},"text":{}},{"id":3862,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":3863,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":493,"character":23}],"signatures":[{"id":3864,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.setState","hash":"setState.setState"},"text":{},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":491,"character":8}],"parentId":3810}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"setState"},"text":{},"parentId":3670},{"id":3920,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":636,"character":8}],"signatures":[{"id":3921,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called to determine whether the change in props and state should trigger a re-render.\n\n"},{"kind":"code","text":"`Component`"},{"kind":"text","text":" always returns true.\n"},{"kind":"code","text":"`PureComponent`"},{"kind":"text","text":" implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":", "},{"kind":"code","text":"`componentWillUpdate`"},{"kind":"text","text":"\nand "},{"kind":"code","text":"`componentDidUpdate`"},{"kind":"text","text":" will not be called."}]},"parameters":[{"id":3922,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3923,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3924,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3925,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3926,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3928,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3929,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3927,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3930,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3931,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3932,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3933,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3934,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3935,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3936,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3924,3925,3926,3928,3929,3927,3930,3931,3932,3933,3934,3935,3936]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3937,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3947,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3951,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3938,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3939,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3940,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3941,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3943,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3944,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3942,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3945,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3946,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3948,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3949,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3950,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3952,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3947,3951,3938,3939,3940,3941,3943,3944,3942,3945,3946,3948,3949,3950,3952]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3953,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3954,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3955,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3956,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3957,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3954]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3958,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3960,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3961,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3959,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3960,3961,3959]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3962,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3963,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3964,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.shouldComponentUpdate","hash":"shouldComponentUpdate.shouldComponentUpdate"},"text":{"comment":"<p>Called to determine whether the change in props and state should trigger a re-render.</p>\n<p><code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":636,"character":8}],"parentId":3920}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"shouldComponentUpdate"},"text":{},"parentId":3670},{"id":3805,"name":"takePoint","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":84,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L84"}],"signatures":[{"id":3806,"name":"takePoint","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePoint.TakePoint.Method.takePoint","hash":"takePoint.takePoint"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":84,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L84"}],"parentId":3805}],"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":"takePoint"},"text":{},"parentId":3670}],"groups":[{"title":"Constructors","children":[3676]},{"title":"Properties","children":[3809,3870,3914,3912,3675]},{"title":"Methods","children":[4062,4107,4195,3967,3918,4015,4060,4064,3965,4150,3865,3799,3971,3807,3810,3920,3805]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/fields/TakePoint.tsx","line":62,"character":13,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L62"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reference","name":"ButtonProps","qualifiedName":"ButtonProps","package":"@mui/material"},{"type":"reflection","declaration":{"id":3671,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3673,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":67,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L67"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"React.HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3674,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":68,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L68"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"React.HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3672,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":66,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L66"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"React.HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3673,3674,3672]}],"sources":[{"fileName":"src/gui/fields/TakePoint.tsx","line":65,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/1c1db95f/src/gui/fields/TakePoint.tsx#L65"}]}}]}],"name":"Component","qualifiedName":"React.Component","package":"@types/react"}],"is":{"declaration":true},"location":{"query":"gui/fields/TakePoint.Class.TakePoint","hash":""},"text":{},"parentId":3669,"hierarchy":[{"name":"Component<FieldProps & Props & ButtonProps & Object>","children":[{"name":"TakePoint","isTarget":true,"linkId":"3670"}]}]}

{"id":1648,"name":"AccordionSummary","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"src/gui/components/record/accordion.tsx","fullFileName":"/home/brian/FAIMS/3/FAIMS3/src/gui/components/record/accordion.tsx","line":23,"character":13,"url":"https://github.com/FAIMS/FAIMS3/blob/ea3e3d3f/src/gui/components/record/accordion.tsx#L23"}],"signatures":[{"id":1649,"name":"AccordionSummary","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1650,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":1651,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1652,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/AccordionSummary/AccordionSummary.d.ts","line":16,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":1653,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/AccordionSummary/AccordionSummary.d.ts","line":20,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AccordionSummaryClasses","qualifiedName":"AccordionSummaryClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":1654,"name":"expandIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The icon to display as the expand indicator."}]},"sources":[{"fileName":"node_modules/@mui/material/AccordionSummary/AccordionSummary.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":1655,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/AccordionSummary/AccordionSummary.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}}],"groups":[{"title":"Properties","children":[1652,1653,1654,1655]}],"sources":[{"fileName":"node_modules/@mui/material/AccordionSummary/AccordionSummary.d.ts","line":12,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":1656,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1666,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":1670,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":1657,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":1658,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1659,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":1660,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":1662,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1663,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1661,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1664,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":1665,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":1667,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":1668,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":1669,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1671,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[1666,1670,1657,1658,1659,1660,1662,1663,1661,1664,1665,1667,1668,1669,1671]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLDivElement","qualifiedName":"HTMLDivElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLDivElement","qualifiedName":"HTMLDivElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLDivElement","qualifiedName":"HTMLDivElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":1672,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1673,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":1674,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":1675,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":1676,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLDivElement","qualifiedName":"HTMLDivElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLDivElement","qualifiedName":"HTMLDivElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[1673]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"expandIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"MUIStyledCommonProps","qualifiedName":"MUIStyledCommonProps","package":"@mui/system"}]}],"name":"PropsWithChildren","qualifiedName":"React.PropsWithChildren","package":"@types/react"},"text":{}},{"id":1677,"name":"context","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"ReactElement","qualifiedName":"React.ReactElement","package":"@types/react"}]},"is":{"declaration":false},"location":{"query":"gui/components/record/accordion.Function.AccordionSummary","hash":"AccordionSummary"},"text":{},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/brian/FAIMS/3/FAIMS3/node_modules/@types/react/index.d.ts","line":550,"character":8}],"parentId":1648}],"is":{"declaration":true},"location":{"query":"gui/components/record/accordion.Function.AccordionSummary","hash":""},"text":{},"parentId":1643}

{"id":3223,"name":"TakePhoto","kind":128,"kindString":"Class","flags":{},"children":[{"id":3229,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isOverride":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":225,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L225"}],"signatures":[{"id":3230,"name":"constructor","kind":16384,"kindString":"Constructor signature","flags":{"isOverride":true},"parameters":[{"id":3231,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3232,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3233,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3234,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3235,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3237,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3238,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3236,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3239,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3240,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3241,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3242,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3243,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3244,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3245,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3233,3234,3235,3237,3238,3236,3239,3240,3241,3242,3243,3244,3245]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3246,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3256,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3260,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3247,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3248,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3249,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3250,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3252,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3253,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3251,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3254,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3255,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3257,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3258,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3259,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3261,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3256,3260,3247,3248,3249,3250,3252,3253,3251,3254,3255,3257,3258,3259,3261]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3262,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3263,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3264,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3265,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3266,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3263]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3267,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3269,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":230,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L230"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3270,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":231,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L231"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3268,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":229,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L229"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3269,3270,3268]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":228,"character":20,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L228"}]}}]},"text":{}}],"type":{"type":"reference","id":3223,"name":"TakePhoto"},"overwrites":{"type":"reference","name":"React.Component<\n  FieldProps &\n    Props &\n    ButtonProps & {\n      ValueTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      ErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      NoErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n    },\n  State\n>.constructor"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Constructor.constructor","hash":"constructor.new TakePhoto"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":225,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L225"}],"parentId":3229}],"overwrites":{"type":"reference","name":"React.Component<\n  FieldProps &\n    Props &\n    ButtonProps & {\n      ValueTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      ErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n      NoErrorTextProps: React.HTMLAttributes<HTMLSpanElement>;\n    },\n  State\n>.constructor"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"constructor"},"text":{},"parentId":3223},{"id":3278,"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"If using the new style context, re-declare this in your class to be the\n"},{"kind":"code","text":"`React.ContextType`"},{"kind":"text","text":" of your "},{"kind":"code","text":"`static contextType`"},{"kind":"text","text":".\nShould be used with type annotation or static contextType.\n\n"},{"kind":"code","text":"```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/context.html"}]}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":479,"character":8}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"context"},"text":{"comment":"<p>If using the new style context, re-declare this in your class to be the\n<code>React.ContextType</code> of your <code>static contextType</code>.\nShould be used with type annotation or static contextType.</p>\n<pre><code class=\"language-ts\"><span class=\"pl-smi\">static</span> <span class=\"pl-smi\">contextType</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">MyContext</span>\n<span class=\"pl-c\">// For TS pre-3.7:</span>\n<span class=\"pl-smi\">context</span><span class=\"pl-k\">!</span>: <span class=\"pl-smi\">React</span>.<span class=\"pl-smi\">ContextType</span><span class=\"pl-k\">&#x3C;typeof</span> <span class=\"pl-smi\">MyContext</span><span class=\"pl-k\">></span>\n<span class=\"pl-c\">// For TS 3.7 and above:</span>\n<span class=\"pl-k\">declare</span> <span class=\"pl-en\">context</span>: <span class=\"pl-smi\">React</span>.<span class=\"pl-smi\">ContextType</span><span class=\"pl-k\">&#x3C;typeof</span> <span class=\"pl-smi\">MyContext</span><span class=\"pl-k\">></span>\n</code></pre>\n<h5>See:</h5><p><a href=\"https://reactjs.org/docs/context.html\">https://reactjs.org/docs/context.html</a></p>\n"},"parentId":3223},{"id":3334,"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":504,"character":17}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3335,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3336,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3337,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3338,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3340,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3341,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3339,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3342,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3343,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3344,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3345,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3346,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3347,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3348,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3336,3337,3338,3340,3341,3339,3342,3343,3344,3345,3346,3347,3348]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3349,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3359,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3363,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3350,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3351,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3352,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3353,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3355,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3356,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3354,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3357,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3358,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3360,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3361,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3362,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3364,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3359,3363,3350,3351,3352,3353,3355,3356,3354,3357,3358,3360,3361,3362,3364]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3365,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3366,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3367,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3368,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3369,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3366]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3370,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3372,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3373,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3371,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3372,3373,3371]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3374,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3375,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":504,"character":49}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3375]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":504,"character":47}]}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"props"},"text":{},"parentId":3223},{"id":3377,"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"}]}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":510,"character":8}],"type":{"type":"reflection","declaration":{"id":3378,"name":"refs","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":510,"character":14}],"indexSignature":{"id":3379,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3380,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance","qualifiedName":"React.ReactInstance","package":"@types/react"}},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"refs"}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"refs"},"text":{"comment":"<h5>Deprecated:</h5><p><a href=\"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\">https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs</a></p>\n"},"parentId":3223},{"id":3376,"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":505,"character":8}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","name":"React.Component.state"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"state"},"text":{},"parentId":3223},{"id":3228,"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"If set, "},{"kind":"code","text":"`this.context`"},{"kind":"text","text":" will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"},{"kind":"code","text":"```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/context.html#classcontexttype"}]}]},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":461,"character":15}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context","qualifiedName":"React.Context","package":"@types/react"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"contextType"},"text":{"comment":"<p>If set, <code>this.context</code> will be set at runtime to the current value of the given Context.</p>\n<p>Usage:</p>\n<pre><code class=\"language-ts\"><span class=\"pl-k\">type</span> <span class=\"pl-en\">MyContext</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">number</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">Ctx</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">React</span>.<span class=\"pl-en\">createContext</span>&#x3C;<span class=\"pl-en\">MyContext</span>>(<span class=\"pl-c1\">0</span>)\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Foo</span> <span class=\"pl-k\">extends</span> <span class=\"pl-en\">React</span>.<span class=\"pl-e\">Component</span> {\n  <span class=\"pl-k\">static</span> <span class=\"pl-v\">contextType</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Ctx</span>\n  <span class=\"pl-v\">context</span><span class=\"pl-k\">!:</span> <span class=\"pl-en\">React</span>.<span class=\"pl-en\">ContextType</span>&#x3C;<span class=\"pl-k\">typeof</span> <span class=\"pl-smi\">Ctx</span>>\n  <span class=\"pl-en\">render</span> () {\n    <span class=\"pl-k\">return</span> &#x3C;><span class=\"pl-smi\">My</span> <span class=\"pl-smi\">context</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>s value: {this.context}&#x3C;/><span class=\"pl-ii\">;</span></span>\n  }\n}\n</code></pre>\n<h5>See:</h5><p><a href=\"https://reactjs.org/docs/context.html#classcontexttype\">https://reactjs.org/docs/context.html#classcontexttype</a></p>\n"},"parentId":3223},{"id":3478,"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":717,"character":8}],"signatures":[{"id":3479,"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before mounting occurs, and before "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use componentDidMount or the constructor instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.UNSAFE_componentWillMount","hash":"UNSAFE_componentWillMount.UNSAFE_componentWillMount"},"text":{"comment":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use componentDidMount or the constructor instead</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":717,"character":8}],"parentId":3478}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"UNSAFE_componentWillMount"},"text":{},"parentId":3223},{"id":3523,"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":749,"character":8}],"signatures":[{"id":3524,"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use static getDerivedStateFromProps instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":3525,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3526,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3527,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3528,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3529,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3531,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3532,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3530,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3533,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3534,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3535,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3536,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3537,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3538,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3539,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3527,3528,3529,3531,3532,3530,3533,3534,3535,3536,3537,3538,3539]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3540,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3550,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3554,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3541,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3542,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3543,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3544,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3546,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3547,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3545,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3548,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3549,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3551,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3552,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3553,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3555,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3550,3554,3541,3542,3543,3544,3546,3547,3545,3548,3549,3551,3552,3553,3555]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3556,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3557,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3558,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3559,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3560,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3557]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3561,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3563,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3564,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3562,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3563,3564,3562]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3565,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.UNSAFE_componentWillReceiveProps","hash":"UNSAFE_componentWillReceiveProps.UNSAFE_componentWillReceiveProps"},"text":{"comment":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use static getDerivedStateFromProps instead</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":749,"character":8}],"parentId":3523}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"UNSAFE_componentWillReceiveProps"},"text":{},"parentId":3223},{"id":3610,"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":777,"character":8}],"signatures":[{"id":3611,"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use getSnapshotBeforeUpdate instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":3612,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3613,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3614,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3615,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3616,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3618,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3619,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3617,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3620,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3621,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3622,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3623,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3624,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3625,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3626,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3614,3615,3616,3618,3619,3617,3620,3621,3622,3623,3624,3625,3626]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3627,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3637,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3641,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3628,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3629,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3630,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3631,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3633,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3634,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3632,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3635,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3636,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3638,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3639,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3640,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3642,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3637,3641,3628,3629,3630,3631,3633,3634,3632,3635,3636,3638,3639,3640,3642]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3643,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3644,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3645,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3646,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3647,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3644]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3648,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3650,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3651,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3649,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3650,3651,3649]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3652,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3653,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.UNSAFE_componentWillUpdate","hash":"UNSAFE_componentWillUpdate.UNSAFE_componentWillUpdate"},"text":{"comment":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>This method will not stop working in React 17.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use getSnapshotBeforeUpdate instead</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":777,"character":8}],"parentId":3610}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"UNSAFE_componentWillUpdate"},"text":{},"parentId":3223},{"id":3429,"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":646,"character":8}],"signatures":[{"id":3430,"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."}]},"parameters":[{"id":3431,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"},"text":{}},{"id":3432,"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo","qualifiedName":"React.ErrorInfo","package":"@types/react"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentDidCatch","hash":"componentDidCatch.componentDidCatch"},"text":{"comment":"<p>Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":646,"character":8}],"parentId":3429}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentDidCatch"},"text":{},"parentId":3223},{"id":3381,"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":625,"character":8}],"signatures":[{"id":3382,"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentDidMount","hash":"componentDidMount.componentDidMount"},"text":{"comment":"<p>Called immediately after a component is mounted. Setting state here will trigger re-rendering.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":625,"character":8}],"parentId":3381}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentDidMount"},"text":{},"parentId":3223},{"id":3273,"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isOverride":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":264,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L264"}],"signatures":[{"id":3274,"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"parameters":[{"id":3275,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"}]},"text":{}}],"type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentDidUpdate","hash":"componentDidUpdate.componentDidUpdate"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":264,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L264"}],"parentId":3273}],"overwrites":{"type":"reference","name":"React.Component.componentDidUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentDidUpdate"},"text":{},"parentId":3223},{"id":3476,"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":703,"character":8}],"signatures":[{"id":3477,"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before mounting occurs, and before "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentWillMount","hash":"componentWillMount.componentWillMount"},"text":{"comment":"<p>Called immediately before mounting occurs, and before <code>Component#render</code>.\nAvoid introducing any side-effects or subscriptions in this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use componentDidMount or the constructor instead; will stop working in React 17</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":703,"character":8}],"parentId":3476}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentWillMount"},"text":{},"parentId":3223},{"id":3480,"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":732,"character":8}],"signatures":[{"id":3481,"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":3482,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3483,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3484,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3485,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3486,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3488,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3489,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3487,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3490,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3491,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3492,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3493,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3494,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3495,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3496,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3484,3485,3486,3488,3489,3487,3490,3491,3492,3493,3494,3495,3496]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3497,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3507,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3511,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3498,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3499,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3500,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3501,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3503,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3504,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3502,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3505,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3506,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3508,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3509,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3510,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3512,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3507,3511,3498,3499,3500,3501,3503,3504,3502,3505,3506,3508,3509,3510,3512]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3513,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3514,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3515,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3516,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3517,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3514]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3518,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3520,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3521,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3519,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3520,3521,3519]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3522,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentWillReceiveProps","hash":"componentWillReceiveProps.componentWillReceiveProps"},"text":{"comment":"<p>Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.</p>\n<p>Calling <code>Component#setState</code> generally does not trigger this method.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use static getDerivedStateFromProps instead; will stop working in React 17</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":732,"character":8}],"parentId":3480}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentWillReceiveProps"},"text":{},"parentId":3223},{"id":3427,"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":641,"character":8}],"signatures":[{"id":3428,"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "},{"kind":"code","text":"`componentDidMount`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentWillUnmount","hash":"componentWillUnmount.componentWillUnmount"},"text":{"comment":"<p>Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in <code>componentDidMount</code>.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":641,"character":8}],"parentId":3427}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentWillUnmount"},"text":{},"parentId":3223},{"id":3566,"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":762,"character":8}],"signatures":[{"id":3567,"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":3568,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3569,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3570,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3571,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3572,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3574,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3575,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3573,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3576,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3577,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3578,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3579,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3580,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3581,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3582,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3570,3571,3572,3574,3575,3573,3576,3577,3578,3579,3580,3581,3582]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3583,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3593,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3597,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3584,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3585,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3586,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3587,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3589,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3590,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3588,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3591,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3592,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3594,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3595,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3596,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3598,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3593,3597,3584,3585,3586,3587,3589,3590,3588,3591,3592,3594,3595,3596,3598]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3599,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3600,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3601,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3602,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3603,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3600]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3604,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3606,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3607,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3605,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3606,3607,3605]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3608,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3609,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.componentWillUpdate","hash":"componentWillUpdate.componentWillUpdate"},"text":{"comment":"<p>Called immediately before rendering when new props or state is received. Not called for the initial render.</p>\n<p>Note: You cannot call <code>Component#setState</code> here.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.</p>\n<h5>Deprecated:</h5><p>16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update</a></li>\n<li><a href=\"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path</a></li>\n</ul>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":762,"character":8}],"parentId":3566}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"componentWillUpdate"},"text":{},"parentId":3223},{"id":3329,"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":496,"character":8}],"signatures":[{"id":3330,"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"parameters":[{"id":3331,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":3332,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":496,"character":31}],"signatures":[{"id":3333,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.forceUpdate","hash":"forceUpdate.forceUpdate"},"text":{},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":496,"character":8}],"parentId":3329}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"forceUpdate"},"text":{},"parentId":3223},{"id":3433,"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":682,"character":8}],"signatures":[{"id":3434,"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Runs before React applies the result of "},{"kind":"code","text":"`render`"},{"kind":"text","text":" to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "},{"kind":"code","text":"`render`"},{"kind":"text","text":" causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."}]},"parameters":[{"id":3435,"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3436,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3437,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3438,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3439,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3441,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3442,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3440,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3443,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3444,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3445,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3446,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3447,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3448,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3449,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3437,3438,3439,3441,3442,3440,3443,3444,3445,3446,3447,3448,3449]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3450,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3460,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3464,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3451,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3452,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3453,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3454,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3456,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3457,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3455,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3458,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3459,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3461,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3462,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3463,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3465,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3460,3464,3451,3452,3453,3454,3456,3457,3455,3458,3459,3461,3462,3463,3465]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3466,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3467,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3468,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3469,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3470,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3467]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3471,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3473,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3474,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3472,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3473,3474,3472]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3475,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.getSnapshotBeforeUpdate","hash":"getSnapshotBeforeUpdate.getSnapshotBeforeUpdate"},"text":{"comment":"<p>Runs before React applies the result of <code>render</code> to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before <code>render</code> causes changes to it.</p>\n<p>Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":682,"character":8}],"parentId":3433}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"getSnapshotBeforeUpdate"},"text":{},"parentId":3223},{"id":3276,"name":"render","kind":2048,"kindString":"Method","flags":{"isOverride":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":274,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L274"}],"signatures":[{"id":3277,"name":"render","kind":4096,"kindString":"Call signature","flags":{"isOverride":true},"type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"},"overwrites":{"type":"reference","name":"React.Component.render"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.render","hash":"render.render"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":274,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L274"}],"parentId":3276}],"overwrites":{"type":"reference","name":"React.Component.render"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"render"},"text":{},"parentId":3223},{"id":3279,"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":491,"character":8}],"signatures":[{"id":3280,"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"typeParameter":[{"id":3281,"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"State"}}}],"parameters":[{"id":3282,"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"State"},{"type":"reflection","declaration":{"id":3283,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":492,"character":20}],"signatures":[{"id":3284,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3285,"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"id":3286,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3287,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3288,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3289,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3290,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3292,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3293,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3291,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3294,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3295,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3296,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3297,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3298,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3299,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3300,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3288,3289,3290,3292,3293,3291,3294,3295,3296,3297,3298,3299,3300]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3301,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3311,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3315,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3302,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3303,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3304,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3305,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3307,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3308,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3306,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3309,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3310,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3312,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3313,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3314,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3316,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3311,3315,3302,3303,3304,3305,3307,3308,3306,3309,3310,3312,3313,3314,3316]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3317,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3318,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3319,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3320,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3321,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3318]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3322,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3324,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3325,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3323,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3324,3325,3323]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"State"},{"type":"reference","typeArguments":[{"type":"reference","name":"State"},{"type":"reference","id":1168,"name":"K","qualifiedName":"K","package":"@types/react"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}]}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"State"},{"type":"reference","id":1168,"name":"K","qualifiedName":"K","package":"@types/react"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}]},"text":{}},{"id":3326,"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":3327,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":493,"character":23}],"signatures":[{"id":3328,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}},"text":{}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.setState","hash":"setState.setState"},"text":{},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":491,"character":8}],"parentId":3279}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"setState"},"text":{},"parentId":3223},{"id":3383,"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true,"isInherited":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":636,"character":8}],"signatures":[{"id":3384,"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Called to determine whether the change in props and state should trigger a re-render.\n\n"},{"kind":"code","text":"`Component`"},{"kind":"text","text":" always returns true.\n"},{"kind":"code","text":"`PureComponent`"},{"kind":"text","text":" implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":", "},{"kind":"code","text":"`componentWillUpdate`"},{"kind":"text","text":"\nand "},{"kind":"code","text":"`componentDidUpdate`"},{"kind":"text","text":" will not be called."}]},"parameters":[{"id":3385,"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reflection","declaration":{"id":3386,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3387,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":23,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3388,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":27,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonClasses","qualifiedName":"ButtonClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3389,"name":"color","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The color of the component.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'primary'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"inherit"},{"type":"literal","value":"secondary"},{"type":"literal","value":"primary"},{"type":"literal","value":"success"},{"type":"literal","value":"error"},{"type":"literal","value":"info"},{"type":"literal","value":"warning"}]}},{"id":3391,"name":"disableElevation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", no elevation is used."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":47,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3392,"name":"disableFocusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the  keyboard focus ripple is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3390,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3393,"name":"endIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed after the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":56,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3394,"name":"fullWidth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the button will take up the full width of its container."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":61,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3395,"name":"href","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The URL to link to when the button is clicked.\nIf defined, an "},{"kind":"code","text":"`a`"},{"kind":"text","text":" element will be used as the root node."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3396,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the component.\n"},{"kind":"code","text":"`small`"},{"kind":"text","text":" is equivalent to the dense button styling."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'medium'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":72,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"small"},{"type":"literal","value":"medium"},{"type":"literal","value":"large"}]}},{"id":3397,"name":"startIcon","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Element placed before the children."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":76,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3398,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":80,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3399,"name":"variant","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant to use."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'text'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":85,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"text"},{"type":"literal","value":"contained"},{"type":"literal","value":"outlined"}]}}],"groups":[{"title":"Properties","children":[3387,3388,3389,3391,3392,3390,3393,3394,3395,3396,3397,3398,3399]}],"sources":[{"fileName":"node_modules/@mui/material/Button/Button.d.ts","line":19,"character":13}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3400,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3410,"name":"LinkComponent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The component used to render a link when the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is provided."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'a'"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":65,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"ElementType","qualifiedName":"React.ElementType","package":"@types/react"}},{"id":3414,"name":"TouchRippleProps","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Props applied to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":82,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleProps","qualifiedName":"TouchRippleProps","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3401,"name":"action","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref for imperative actions.\nIt currently only supports "},{"kind":"code","text":"`focusVisible()`"},{"kind":"text","text":" action."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":14,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseActions","qualifiedName":"ButtonBaseActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}},{"id":3402,"name":"centerRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripples are centered.\nThey won't start at the cursor interaction position."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3403,"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The content of the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":24,"character":4}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":3404,"name":"classes","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override or extend the styles applied to the component."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":28,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ButtonBaseClasses","qualifiedName":"ButtonBaseClasses","package":"@mui/material"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":3406,"name":"disableRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the "},{"kind":"code","text":"`.Mui-focusVisible`"},{"kind":"text","text":" class."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3407,"name":"disableTouchRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the touch ripple effect is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3405,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the component is disabled."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3408,"name":"focusRipple","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the base button will have a keyboard focus ripple."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":51,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3409,"name":"focusVisibleClassName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This prop can help identify which element has keyboard focus.\nThe class name will be applied when the element gains the focus through keyboard interaction.\nIt's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\nThe rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\nA [polyfill can be used](https://github.com/WICG/focus-visible) to apply a "},{"kind":"code","text":"`focus-visible`"},{"kind":"text","text":" class to other components\nif needed."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3411,"name":"onFocusVisible","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback fired when the component is focused with a keyboard.\nWe trigger a "},{"kind":"code","text":"`onFocus`"},{"kind":"text","text":" callback too."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":70,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"FocusEventHandler","qualifiedName":"React.FocusEventHandler","package":"@types/react"}},{"id":3412,"name":"sx","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The system prop that allows defining system overrides as well as additional CSS styles."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":74,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Theme","qualifiedName":"Theme","package":"@mui/material"}],"name":"SxProps","qualifiedName":"SxProps","package":"@mui/system"}},{"id":3413,"name":"tabIndex","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":3415,"name":"touchRippleRef","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ref that points to the "},{"kind":"code","text":"`TouchRipple`"},{"kind":"text","text":" element."}]},"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":86,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TouchRippleActions","qualifiedName":"TouchRippleActions","package":"@mui/material"}],"name":"Ref","qualifiedName":"React.Ref","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3410,3414,3401,3402,3403,3404,3406,3407,3405,3408,3409,3411,3412,3413,3415]}],"sources":[{"fileName":"node_modules/@mui/material/ButtonBase/ButtonBase.d.ts","line":9,"character":13}]}},{"type":"literal","value":"classes"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"DetailedHTMLProps","qualifiedName":"React.DetailedHTMLProps","package":"@types/react"},{"type":"union","types":[{"type":"literal","value":"key"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"ButtonHTMLAttributes","qualifiedName":"React.ButtonHTMLAttributes","package":"@types/react"}}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":3416,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3417,"name":"ref","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":45}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":3418,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":91,"character":28}],"signatures":[{"id":3419,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":3420,"name":"instance","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLButtonElement","qualifiedName":"HTMLButtonElement","package":"typescript"}],"name":"RefObject","qualifiedName":"React.RefObject","package":"@types/react"}]}}],"groups":[{"title":"Properties","children":[3417]}],"sources":[{"fileName":"node_modules/@types/react/index.d.ts","line":824,"character":43}]}}]},{"type":"union","types":[{"type":"literal","value":"children"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"CommonProps","qualifiedName":"CommonProps","package":"@mui/material"}},{"type":"literal","value":"color"},{"type":"literal","value":"sx"},{"type":"literal","value":"tabIndex"},{"type":"literal","value":"href"},{"type":"literal","value":"disabled"},{"type":"literal","value":"action"},{"type":"literal","value":"size"},{"type":"literal","value":"variant"},{"type":"literal","value":"centerRipple"},{"type":"literal","value":"disableRipple"},{"type":"literal","value":"disableTouchRipple"},{"type":"literal","value":"focusRipple"},{"type":"literal","value":"focusVisibleClassName"},{"type":"literal","value":"LinkComponent"},{"type":"literal","value":"onFocusVisible"},{"type":"literal","value":"TouchRippleProps"},{"type":"literal","value":"touchRippleRef"},{"type":"literal","value":"disableElevation"},{"type":"literal","value":"disableFocusRipple"},{"type":"literal","value":"endIcon"},{"type":"literal","value":"fullWidth"},{"type":"literal","value":"startIcon"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":3421,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3423,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3424,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3422,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3423,3424,3422]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3425,"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"State"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"text":{}},{"id":3426,"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"},"text":{}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.shouldComponentUpdate","hash":"shouldComponentUpdate.shouldComponentUpdate"},"text":{"comment":"<p>Called to determine whether the change in props and state should trigger a re-render.</p>\n<p><code>Component</code> always returns true.\n<code>PureComponent</code> implements a shallow comparison on props and state and returns true if any\nprops or states have changed.</p>\n<p>If false is returned, <code>Component#render</code>, <code>componentWillUpdate</code>\nand <code>componentDidUpdate</code> will not be called.</p>\n"},"sources":[{"fileName":"node_modules/@types/react/index.d.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/node_modules/@types/react/index.d.ts","line":636,"character":8}],"parentId":3383}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"},"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"shouldComponentUpdate"},"text":{},"parentId":3223},{"id":3271,"name":"takePhoto","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":241,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L241"}],"signatures":[{"id":3272,"name":"takePhoto","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"gui/fields/TakePhoto.TakePhoto.Method.takePhoto","hash":"takePhoto.takePhoto"},"text":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":241,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L241"}],"parentId":3271}],"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":"takePhoto"},"text":{},"parentId":3223}],"groups":[{"title":"Constructors","children":[3229]},{"title":"Properties","children":[3278,3334,3377,3376,3228]},{"title":"Methods","children":[3478,3523,3610,3429,3381,3273,3476,3480,3427,3566,3329,3433,3276,3279,3383,3271]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/gui/fields/TakePhoto.tsx","line":215,"character":13,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L215"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"FieldProps","qualifiedName":"FieldProps","package":"formik"},{"type":"reference","name":"Props"},{"type":"reference","name":"ButtonProps","qualifiedName":"ButtonProps","package":"@mui/material"},{"type":"reflection","declaration":{"id":3224,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3226,"name":"ErrorTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":220,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L220"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"React.HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3227,"name":"NoErrorTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":221,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L221"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"React.HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}},{"id":3225,"name":"ValueTextProps","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":219,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L219"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"HTMLSpanElement","qualifiedName":"HTMLSpanElement","package":"typescript"}],"name":"React.HTMLAttributes","qualifiedName":"React.HTMLAttributes","package":"@types/react"}}],"groups":[{"title":"Properties","children":[3226,3227,3225]}],"sources":[{"fileName":"src/gui/fields/TakePhoto.tsx","line":218,"character":18,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/gui/fields/TakePhoto.tsx#L218"}]}}]},{"type":"reference","name":"State"}],"name":"Component","qualifiedName":"React.Component","package":"@types/react"}],"is":{"declaration":true},"location":{"query":"gui/fields/TakePhoto.Class.TakePhoto","hash":""},"text":{},"parentId":3222,"hierarchy":[{"name":"Component<FieldProps & Props & ButtonProps & Object, State>","children":[{"name":"TakePhoto","isTarget":true,"linkId":"3223"}]}]}

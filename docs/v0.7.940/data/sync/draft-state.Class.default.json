{"id":5467,"name":"default","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Intermediary between React and Pouch Draft storage.\n\nBecause draft data must be accessable synchronously\n(due to Formik) this stores a copy of the draft data.\n(Just for this form, it's not much)\n\nUnless you open the same record on 2 tabs, it's\nnot possible for the pouch to out of sync with this\n\n\nThis class has an invariant that either _fetchData function is running, or\nthis.data !== null, or this.fetch_error !== null\nThis invariant doesn't hold before start() or after stop()"}]},"children":[{"id":5468,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":211,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L211"}],"signatures":[{"id":5469,"name":"constructor","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":5470,"name":"relevantProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"RelevantProps"},"text":{}}],"type":{"type":"reference","id":5467,"name":"RecordDraftState"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Constructor.constructor","hash":"constructor.new default"},"text":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":211,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L211"}],"parentId":5468}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"constructor"},"text":{},"parentId":5467},{"id":5471,"name":"data","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":107,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L107"}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":5472,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5473,"name":"state","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":109,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L109"}],"type":{"type":"literal","value":"uninitialized"}}],"groups":[{"title":"Properties","children":[5473]}],"sources":[{"fileName":"src/sync/draft-state.ts","line":108,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L108"}]}},{"type":"reflection","declaration":{"id":5474,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5478,"name":"annotations","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":124,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L124"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"StagedData"}]}},{"id":5479,"name":"field_types","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":125,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L125"}],"type":{"type":"reflection","declaration":{"id":5480,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":125,"character":21,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L125"}],"indexSignature":{"id":5481,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5482,"name":"field_name","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":462,"name":"FAIMSTypeName"}}}}},{"id":5477,"name":"fields","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":123,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L123"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"StagedData"}]}},{"id":5483,"name":"relationship","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/sync/draft-state.ts","line":126,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L126"}],"type":{"type":"reference","id":506,"name":"Relationship"}},{"id":5475,"name":"state","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":112,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L112"}],"type":{"type":"literal","value":"unedited"}},{"id":5476,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":115,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L115"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5478,5479,5477,5483,5475,5476]}],"sources":[{"fileName":"src/sync/draft-state.ts","line":111,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L111"}]}},{"type":"reflection","declaration":{"id":5484,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5487,"name":"annotations","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":137,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L137"}],"type":{"type":"reference","name":"StagedData"}},{"id":5494,"name":"draft_id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":148,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L148"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":5489,"name":"field_types","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":139,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L139"}],"type":{"type":"reflection","declaration":{"id":5490,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":139,"character":21,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L139"}],"indexSignature":{"id":5491,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5492,"name":"field_name","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":462,"name":"FAIMSTypeName"}}}}},{"id":5486,"name":"fields","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":136,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L136"}],"type":{"type":"reference","name":"StagedData"}},{"id":5493,"name":"relationship","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"src/sync/draft-state.ts","line":140,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L140"}],"type":{"type":"reference","id":506,"name":"Relationship"}},{"id":5485,"name":"state","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":129,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L129"}],"type":{"type":"literal","value":"edited"}},{"id":5488,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":138,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L138"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5487,5494,5489,5486,5493,5485,5488]}],"sources":[{"fileName":"src/sync/draft-state.ts","line":128,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L128"}]}}]},"defaultValue":"...","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"data"},"text":{},"parentId":5467},{"id":5495,"name":"data_listeners","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":155,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L155"}],"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":5496,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":156,"character":4,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L156"}],"signatures":[{"id":5497,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5498,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"reference","name":"StagedData"},{"type":"reference","name":"StagedData"}]}}],"type":{"type":"intrinsic","name":"unknown"}}]}},{"type":"reflection","declaration":{"id":5499,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":157,"character":4,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L157"}],"signatures":[{"id":5500,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5501,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"unknown"}}]}}]}},"defaultValue":"[]","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"data_listeners"},"text":{},"parentId":5467},{"id":5506,"name":"errors","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":194,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L194"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"errors"},"text":{},"parentId":5467},{"id":5509,"name":"fetch_error","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Last time _fetchData was called, if it produced an error,\nthis is said error."}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":205,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L205"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5510,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]},"defaultValue":"null","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"fetch_error"},"text":{"comment":"<p>Last time _fetchData was called, if it produced an error,\nthis is said error.</p>\n"},"parentId":5467},{"id":5529,"name":"fetch_sequence","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows the _fetchData to be interrupted.\nAny future _fetchData calls, or any interruptions\njust have to increment this value and _fetchData will check\nit at all its resume points"}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":428,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L428"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"fetch_sequence"},"text":{"comment":"<p>Allows the _fetchData to be interrupted.\nAny future _fetchData calls, or any interruptions\njust have to increment this value and _fetchData will check\nit at all its resume points</p>\n"},"parentId":5467},{"id":5503,"name":"interval","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Return from setInterval, when the draft save is running."}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":174,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L174"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]},"defaultValue":"null","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"interval"},"text":{"comment":"<p>Return from setInterval, when the draft save is running.</p>\n"},"parentId":5467},{"id":5502,"name":"is_saving","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Set to true when the touched fields are being iterated on\nor the draft data is being pushed to Pouch,\nSet to false once Pouch has returned, or once pouch\nthrows an error\n\nThis should mean it will be true for a few milliseconds,\nevery 2 seconds (when saving is on)"}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":169,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L169"}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"is_saving"},"text":{"comment":"<p>Set to true when the touched fields are being iterated on\nor the draft data is being pushed to Pouch,\nSet to false once Pouch has returned, or once pouch\nthrows an error</p>\n<p>This should mean it will be true for a few milliseconds,\nevery 2 seconds (when saving is on)</p>\n"},"parentId":5467},{"id":5505,"name":"last_revision","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"(Incrementally increasing) revision ID from draft docs\nReset when current record/project changes\nUsed to avoid collision-avoid lookup before setDraftData\nWhenever setDraftData is called, save the revision to this."}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":191,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L191"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"last_revision"},"text":{"comment":"<p>(Incrementally increasing) revision ID from draft docs\nReset when current record/project changes\nUsed to avoid collision-avoid lookup before setDraftData\nWhenever setDraftData is called, save the revision to this.</p>\n"},"parentId":5467},{"id":5525,"name":"newDraftListener","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Called if this state goes from unedited => edited\n(i.e. the user changed a value in the form)"}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":420,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L420"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5526,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":420,"character":28,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L420"}],"signatures":[{"id":5527,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5528,"name":"draft_id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}]}}]},"defaultValue":"null","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"newDraftListener"},"text":{"comment":"<p>Called if this state goes from unedited =&gt; edited\n(i.e. the user changed a value in the form)</p>\n"},"parentId":5467},{"id":5511,"name":"props","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":209,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L209"}],"type":{"type":"reference","name":"RelevantProps"},"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"props"},"text":{},"parentId":5467},{"id":5541,"name":"saveListener","kind":4096,"kindString":"Property","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":605,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L605"}],"type":{"type":"reflection","declaration":{"id":5542,"name":"saveListener","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":605,"character":16,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L605"}],"signatures":[{"id":5543,"name":"saveListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set in constructor, called when saving starts (true), finishes (false), or\n(after MAX_CONSEQUTIVE_SAVE_ERRORS reached) errors out ({error_object})"}]},"parameters":[{"id":5544,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reflection","declaration":{"id":5545,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]},"text":{}}],"type":{"type":"intrinsic","name":"unknown"},"is":{"declaration":false},"location":{"query":"sync/draft-state.Class.default","hash":"saveListener.__type"},"text":{"comment":"<p>Set in constructor, called when saving starts (true), finishes (false), or\n(after MAX_CONSEQUTIVE_SAVE_ERRORS reached) errors out ({error_object})</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":605,"character":16,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L605"}],"parentId":5467}],"location":{"query":"sync/draft-state.Class.default","hash":"saveListener"}}},"defaultValue":"...","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"saveListener"},"text":{},"parentId":5467},{"id":5507,"name":"save_error","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"First error in the last sequence of errors to occur."}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":199,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L199"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":5508,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]},"defaultValue":"null","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"save_error"},"text":{"comment":"<p>First error in the last sequence of errors to occur.</p>\n"},"parentId":5467},{"id":5504,"name":"touched_fields","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Keeps track of any fields that have changed from their initial values\nThis is different from formik's FormikProps.touched, in that it tracks\nwhen the values change before the blur event (i.e. listens for onChange AND onBlur)\nAnd it loads whatever was previously touched in the draft storage.\nUsed for determining what to save to the draft storage."}]},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":183,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L183"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Set","qualifiedName":"Set","package":"typescript"},"defaultValue":"...","is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"touched_fields"},"text":{"comment":"<p>Keeps track of any fields that have changed from their initial values\nThis is different from formik&#39;s FormikProps.touched, in that it tracks\nwhen the values change before the blur event (i.e. listens for onChange AND onBlur)\nAnd it loads whatever was previously touched in the draft storage.\nUsed for determining what to save to the draft storage.</p>\n"},"parentId":5467},{"id":5530,"name":"_fetchData","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":440,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L440"}],"signatures":[{"id":5531,"name":"_fetchData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Called from within this class, fetches the latest data from the draft storage\nputs it into data and then resolves any promises waiting for said data.\n\nThis should be called whenever the ID of the draft document changes:\nthis ID is made from the project id, (with listing id), record id and\npossibly the view (View-specific draft not implemented yet, TBD)\nSo if the project changes, this _fetchData() should be run.\nThis should also be run at construction of this class."}]},"parameters":[{"id":5532,"name":"loadedprops","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LoadableProps"},"text":{}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method._fetchData","hash":"_fetchData._fetchData"},"text":{"comment":"<p>Called from within this class, fetches the latest data from the draft storage\nputs it into data and then resolves any promises waiting for said data.</p>\n<p>This should be called whenever the ID of the draft document changes:\nthis ID is made from the project id, (with listing id), record id and\npossibly the view (View-specific draft not implemented yet, TBD)\nSo if the project changes, this _fetchData() should be run.\nThis should also be run at construction of this class.</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":440,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L440"}],"parentId":5530}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"_fetchData"},"text":{},"parentId":5467},{"id":5535,"name":"_saveData","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":532,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L532"}],"signatures":[{"id":5536,"name":"_saveData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Pushes the currently touched values into the draft DB\n\nThis is awaitable as a normal async function"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method._saveData","hash":"_saveData._saveData"},"text":{"comment":"<p>Pushes the currently touched values into the draft DB</p>\n<p>This is awaitable as a normal async function</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":532,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L532"}],"parentId":5535}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"_saveData"},"text":{},"parentId":5467},{"id":5533,"name":"_touchedData","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":498,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L498"}],"signatures":[{"id":5534,"name":"_touchedData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Called from within this class, waits for data if need be, (assuming\nfetchData() is running or data is immediately available) then returns\nthe staged data, ONLY fields that are touched"}]},"type":{"type":"reference","typeArguments":[{"type":"tuple","elements":[{"type":"reference","name":"StagedData"},{"type":"reference","name":"StagedData"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method._touchedData","hash":"_touchedData._touchedData"},"text":{"comment":"<p>Called from within this class, waits for data if need be, (assuming\nfetchData() is running or data is immediately available) then returns\nthe staged data, ONLY fields that are touched</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":498,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L498"}],"parentId":5533}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"_touchedData"},"text":{},"parentId":5467},{"id":5550,"name":"clear","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":643,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L643"}],"signatures":[{"id":5551,"name":"clear","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Called after save & new button is pressed,\nThis deletes the draft from the draft database\n\nThis is done for existing observations and new observations, and therefore\nreverts RecordDraftState to as if it was given draft_id === null\n(Even for editing new drafts)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.clear","hash":"clear.clear"},"text":{"comment":"<p>Called after save &amp; new button is pressed,\nThis deletes the draft from the draft database</p>\n<p>This is done for existing observations and new observations, and therefore\nreverts RecordDraftState to as if it was given draft_id === null\n(Even for editing new drafts)</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":643,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L643"}],"parentId":5550}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"clear"},"text":{},"parentId":5467},{"id":5537,"name":"forceSave","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":588,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L588"}],"signatures":[{"id":5538,"name":"forceSave","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Force pushes the currently touched values into the draft DB, needed when\nthe user leaves the page.\n\nThis is awaitable as a normal async function"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.forceSave","hash":"forceSave.forceSave"},"text":{"comment":"<p>Force pushes the currently touched values into the draft DB, needed when\nthe user leaves the page.</p>\n<p>This is awaitable as a normal async function</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":588,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L588"}],"parentId":5537}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"forceSave"},"text":{},"parentId":5467},{"id":5539,"name":"getInitialValues","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":597,"character":8,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L597"}],"signatures":[{"id":5540,"name":"getInitialValues","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Called by setInitialValues, this function retrieves any existing\ndata from the draft storage for this current record/revision"}]},"type":{"type":"reference","typeArguments":[{"type":"tuple","elements":[{"type":"reference","name":"StagedData"},{"type":"reference","name":"StagedData"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.getInitialValues","hash":"getInitialValues.getInitialValues"},"text":{"comment":"<p>Called by setInitialValues, this function retrieves any existing\ndata from the draft storage for this current record/revision</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":597,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L597"}],"parentId":5539}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"getInitialValues"},"text":{},"parentId":5467},{"id":5546,"name":"recordChangeHook","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":626,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L626"}],"signatures":[{"id":5547,"name":"recordChangeHook","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Called from RecordForm.componentDidUpdate,\nthis determines if draft data must be changed/refreshed\nand does so.\n\nsetInitialValues of your form must be run after this function,\ni.e. while this runs, initialValues should be non-existant, until\nthis function returns. At which point, you may combine existing data\nand data from this.getInitialValues() to give to Formik.\n\nNote: To avoid the staged values constantly re-fetching themselves,\n      only trigger this when any of the following props of your\n      component changes:\n          record_id, revision_id\n      Or other props that change which data the draft storage\n      should fetch\n\nThis may trigger a change of state of the RecordForm"}]},"parameters":[{"id":5548,"name":"newProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"RelevantProps"},"text":{}},{"id":5549,"name":"loadedProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LoadableProps"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.recordChangeHook","hash":"recordChangeHook.recordChangeHook"},"text":{"comment":"<p>Called from RecordForm.componentDidUpdate,\nthis determines if draft data must be changed/refreshed\nand does so.</p>\n<p>setInitialValues of your form must be run after this function,\ni.e. while this runs, initialValues should be non-existant, until\nthis function returns. At which point, you may combine existing data\nand data from this.getInitialValues() to give to Formik.</p>\n<p>Note: To avoid the staged values constantly re-fetching themselves,\n      only trigger this when any of the following props of your\n      component changes:\n          record_id, revision_id\n      Or other props that change which data the draft storage\n      should fetch</p>\n<p>This may trigger a change of state of the RecordForm</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":626,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L626"}],"parentId":5546}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"recordChangeHook"},"text":{},"parentId":5467},{"id":5517,"name":"renderHook","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":246,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L246"}],"signatures":[{"id":5518,"name":"renderHook","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A function executed when an record form renders with the Formik form showing:\n<Formik>{values => renderHook(values); return (<other elements>)}</Formik>"}]},"parameters":[{"id":5519,"name":"values","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"FormikProps.values object, retrieved from the First argument\n              of the callback to the Formik element's children:"}]},"type":{"type":"reference","name":"FormikValues","qualifiedName":"FormikValues","package":"formik"},"text":{"comment":"<p>FormikProps.values object, retrieved from the First argument\n              of the callback to the Formik element&#39;s children:</p>\n"}},{"id":5520,"name":"annotations","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5521,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","line":248,"character":17,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L248"}],"indexSignature":{"id":5522,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":5523,"name":"field_name","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":463,"name":"Annotations"}}}},"text":{}},{"id":5524,"name":"relationship","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":506,"name":"Relationship"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.renderHook","hash":"renderHook.renderHook"},"text":{"comment":"<p>A function executed when an record form renders with the Formik form showing:\n<Formik>{values =&gt; renderHook(values); return (<other elements>)}</Formik></p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":246,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L246"}],"parentId":5517}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"renderHook"},"text":{},"parentId":5467},{"id":5512,"name":"start","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":219,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L219"}],"signatures":[{"id":5513,"name":"start","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Starts any timeouts/timers that need to be started,\n*Starts fetching draft data* (use getInitialValues() after calling this)"}]},"parameters":[{"id":5514,"name":"loadedProps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"LoadableProps"},"text":{}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.start","hash":"start.start"},"text":{"comment":"<p>Starts any timeouts/timers that need to be started,\n<em>Starts fetching draft data</em> (use getInitialValues() after calling this)</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":219,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L219"}],"parentId":5512}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"start"},"text":{},"parentId":5467},{"id":5515,"name":"stop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":232,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L232"}],"signatures":[{"id":5516,"name":"stop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Stops any pending promises/timeouts, invalidating this class\nCall this before the owning react component unmounts"}]},"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"sync/draft-state.default.Method.stop","hash":"stop.stop"},"text":{"comment":"<p>Stops any pending promises/timeouts, invalidating this class\nCall this before the owning react component unmounts</p>\n"},"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":232,"character":2,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L232"}],"parentId":5515}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":"stop"},"text":{},"parentId":5467}],"groups":[{"title":"Constructors","children":[5468]},{"title":"Properties","children":[5471,5495,5506,5509,5529,5503,5502,5505,5525,5511,5541,5507,5504]},{"title":"Methods","children":[5530,5535,5533,5550,5537,5539,5546,5517,5512,5515]}],"sources":[{"fileName":"src/sync/draft-state.ts","fullFileName":"/home/runner/work/FAIMS3/FAIMS3/src/sync/draft-state.ts","line":106,"character":6,"url":"https://github.com/FAIMS/FAIMS3/blob/a300d3b/src/sync/draft-state.ts#L106"}],"is":{"declaration":true},"location":{"query":"sync/draft-state.Class.default","hash":""},"text":{"comment":"<p>Intermediary between React and Pouch Draft storage.</p>\n<p>Because draft data must be accessable synchronously\n(due to Formik) this stores a copy of the draft data.\n(Just for this form, it&#39;s not much)</p>\n<p>Unless you open the same record on 2 tabs, it&#39;s\nnot possible for the pouch to out of sync with this</p>\n<p>This class has an invariant that either _fetchData function is running, or\nthis.data !== null, or this.fetch_error !== null\nThis invariant doesn&#39;t hold before start() or after stop()</p>\n"},"parentId":5466,"hierarchy":[{"name":"default","isTarget":true,"linkId":"5467"}]}

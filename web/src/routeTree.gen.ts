/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as ProtectedAdminRouteImport } from './routes/_protected/_admin'
import { Route as ProtectedTemplatesIndexRouteImport } from './routes/_protected/templates/index'
import { Route as ProtectedTeamsIndexRouteImport } from './routes/_protected/teams/index'
import { Route as ProtectedProjectsIndexRouteImport } from './routes/_protected/projects/index'
import { Route as ProtectedProfileIndexRouteImport } from './routes/_protected/profile/index'
import { Route as ProtectedTemplatesTemplateIdRouteImport } from './routes/_protected/templates/$templateId'
import { Route as ProtectedTeamsTeamIdRouteImport } from './routes/_protected/teams/$teamId'
import { Route as ProtectedProjectsProjectIdRouteImport } from './routes/_protected/projects/$projectId'
import { Route as ProtectedProfileLongLivedTokensRouteImport } from './routes/_protected/profile/long-lived-tokens'
import { Route as ProtectedAdminUsersRouteImport } from './routes/_protected/_admin/users'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAdminRoute = ProtectedAdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedTemplatesIndexRoute = ProtectedTemplatesIndexRouteImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedTeamsIndexRoute = ProtectedTeamsIndexRouteImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProjectsIndexRoute = ProtectedProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProfileIndexRoute = ProtectedProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedTemplatesTemplateIdRoute =
  ProtectedTemplatesTemplateIdRouteImport.update({
    id: '/templates/$templateId',
    path: '/templates/$templateId',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedTeamsTeamIdRoute = ProtectedTeamsTeamIdRouteImport.update({
  id: '/teams/$teamId',
  path: '/teams/$teamId',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProjectsProjectIdRoute =
  ProtectedProjectsProjectIdRouteImport.update({
    id: '/projects/$projectId',
    path: '/projects/$projectId',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedProfileLongLivedTokensRoute =
  ProtectedProfileLongLivedTokensRouteImport.update({
    id: '/profile/long-lived-tokens',
    path: '/profile/long-lived-tokens',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedAdminUsersRoute = ProtectedAdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => ProtectedAdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof ProtectedIndexRoute
  '/users': typeof ProtectedAdminUsersRoute
  '/profile/long-lived-tokens': typeof ProtectedProfileLongLivedTokensRoute
  '/projects/$projectId': typeof ProtectedProjectsProjectIdRoute
  '/teams/$teamId': typeof ProtectedTeamsTeamIdRoute
  '/templates/$templateId': typeof ProtectedTemplatesTemplateIdRoute
  '/profile': typeof ProtectedProfileIndexRoute
  '/projects': typeof ProtectedProjectsIndexRoute
  '/teams': typeof ProtectedTeamsIndexRoute
  '/templates': typeof ProtectedTemplatesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof ProtectedIndexRoute
  '/users': typeof ProtectedAdminUsersRoute
  '/profile/long-lived-tokens': typeof ProtectedProfileLongLivedTokensRoute
  '/projects/$projectId': typeof ProtectedProjectsProjectIdRoute
  '/teams/$teamId': typeof ProtectedTeamsTeamIdRoute
  '/templates/$templateId': typeof ProtectedTemplatesTemplateIdRoute
  '/profile': typeof ProtectedProfileIndexRoute
  '/projects': typeof ProtectedProjectsIndexRoute
  '/teams': typeof ProtectedTeamsIndexRoute
  '/templates': typeof ProtectedTemplatesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/_admin': typeof ProtectedAdminRouteWithChildren
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/_admin/users': typeof ProtectedAdminUsersRoute
  '/_protected/profile/long-lived-tokens': typeof ProtectedProfileLongLivedTokensRoute
  '/_protected/projects/$projectId': typeof ProtectedProjectsProjectIdRoute
  '/_protected/teams/$teamId': typeof ProtectedTeamsTeamIdRoute
  '/_protected/templates/$templateId': typeof ProtectedTemplatesTemplateIdRoute
  '/_protected/profile/': typeof ProtectedProfileIndexRoute
  '/_protected/projects/': typeof ProtectedProjectsIndexRoute
  '/_protected/teams/': typeof ProtectedTeamsIndexRoute
  '/_protected/templates/': typeof ProtectedTemplatesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/users'
    | '/profile/long-lived-tokens'
    | '/projects/$projectId'
    | '/teams/$teamId'
    | '/templates/$templateId'
    | '/profile'
    | '/projects'
    | '/teams'
    | '/templates'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/users'
    | '/profile/long-lived-tokens'
    | '/projects/$projectId'
    | '/teams/$teamId'
    | '/templates/$templateId'
    | '/profile'
    | '/projects'
    | '/teams'
    | '/templates'
  id:
    | '__root__'
    | '/_protected'
    | '/_protected/_admin'
    | '/_protected/'
    | '/_protected/_admin/users'
    | '/_protected/profile/long-lived-tokens'
    | '/_protected/projects/$projectId'
    | '/_protected/teams/$teamId'
    | '/_protected/templates/$templateId'
    | '/_protected/profile/'
    | '/_protected/projects/'
    | '/_protected/teams/'
    | '/_protected/templates/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/_admin': {
      id: '/_protected/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedAdminRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/templates/': {
      id: '/_protected/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof ProtectedTemplatesIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/teams/': {
      id: '/_protected/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof ProtectedTeamsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/projects/': {
      id: '/_protected/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProtectedProjectsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/profile/': {
      id: '/_protected/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/templates/$templateId': {
      id: '/_protected/templates/$templateId'
      path: '/templates/$templateId'
      fullPath: '/templates/$templateId'
      preLoaderRoute: typeof ProtectedTemplatesTemplateIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/teams/$teamId': {
      id: '/_protected/teams/$teamId'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof ProtectedTeamsTeamIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/projects/$projectId': {
      id: '/_protected/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProtectedProjectsProjectIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/profile/long-lived-tokens': {
      id: '/_protected/profile/long-lived-tokens'
      path: '/profile/long-lived-tokens'
      fullPath: '/profile/long-lived-tokens'
      preLoaderRoute: typeof ProtectedProfileLongLivedTokensRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/_admin/users': {
      id: '/_protected/_admin/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof ProtectedAdminUsersRouteImport
      parentRoute: typeof ProtectedAdminRoute
    }
  }
}

interface ProtectedAdminRouteChildren {
  ProtectedAdminUsersRoute: typeof ProtectedAdminUsersRoute
}

const ProtectedAdminRouteChildren: ProtectedAdminRouteChildren = {
  ProtectedAdminUsersRoute: ProtectedAdminUsersRoute,
}

const ProtectedAdminRouteWithChildren = ProtectedAdminRoute._addFileChildren(
  ProtectedAdminRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedAdminRoute: typeof ProtectedAdminRouteWithChildren
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedProfileLongLivedTokensRoute: typeof ProtectedProfileLongLivedTokensRoute
  ProtectedProjectsProjectIdRoute: typeof ProtectedProjectsProjectIdRoute
  ProtectedTeamsTeamIdRoute: typeof ProtectedTeamsTeamIdRoute
  ProtectedTemplatesTemplateIdRoute: typeof ProtectedTemplatesTemplateIdRoute
  ProtectedProfileIndexRoute: typeof ProtectedProfileIndexRoute
  ProtectedProjectsIndexRoute: typeof ProtectedProjectsIndexRoute
  ProtectedTeamsIndexRoute: typeof ProtectedTeamsIndexRoute
  ProtectedTemplatesIndexRoute: typeof ProtectedTemplatesIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAdminRoute: ProtectedAdminRouteWithChildren,
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedProfileLongLivedTokensRoute: ProtectedProfileLongLivedTokensRoute,
  ProtectedProjectsProjectIdRoute: ProtectedProjectsProjectIdRoute,
  ProtectedTeamsTeamIdRoute: ProtectedTeamsTeamIdRoute,
  ProtectedTemplatesTemplateIdRoute: ProtectedTemplatesTemplateIdRoute,
  ProtectedProfileIndexRoute: ProtectedProfileIndexRoute,
  ProtectedProjectsIndexRoute: ProtectedProjectsIndexRoute,
  ProtectedTeamsIndexRoute: ProtectedTeamsIndexRoute,
  ProtectedTemplatesIndexRoute: ProtectedTemplatesIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

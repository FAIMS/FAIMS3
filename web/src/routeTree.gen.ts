/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersImport } from './routes/users'
import { Route as ProfileImport } from './routes/profile'
import { Route as AccountImport } from './routes/account'
import { Route as IndexImport } from './routes/index'
import { Route as TemplatesIndexImport } from './routes/templates/index'
import { Route as SurveysIndexImport } from './routes/surveys/index'
import { Route as TemplatesTemplateIdImport } from './routes/templates/$templateId'
import { Route as SurveysSurveyIdImport } from './routes/surveys/$surveyId'

// Create/Update Routes

const UsersRoute = UsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TemplatesIndexRoute = TemplatesIndexImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => rootRoute,
} as any)

const SurveysIndexRoute = SurveysIndexImport.update({
  id: '/surveys/',
  path: '/surveys/',
  getParentRoute: () => rootRoute,
} as any)

const TemplatesTemplateIdRoute = TemplatesTemplateIdImport.update({
  id: '/templates/$templateId',
  path: '/templates/$templateId',
  getParentRoute: () => rootRoute,
} as any)

const SurveysSurveyIdRoute = SurveysSurveyIdImport.update({
  id: '/surveys/$surveyId',
  path: '/surveys/$surveyId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
    '/surveys/$surveyId': {
      id: '/surveys/$surveyId'
      path: '/surveys/$surveyId'
      fullPath: '/surveys/$surveyId'
      preLoaderRoute: typeof SurveysSurveyIdImport
      parentRoute: typeof rootRoute
    }
    '/templates/$templateId': {
      id: '/templates/$templateId'
      path: '/templates/$templateId'
      fullPath: '/templates/$templateId'
      preLoaderRoute: typeof TemplatesTemplateIdImport
      parentRoute: typeof rootRoute
    }
    '/surveys/': {
      id: '/surveys/'
      path: '/surveys'
      fullPath: '/surveys'
      preLoaderRoute: typeof SurveysIndexImport
      parentRoute: typeof rootRoute
    }
    '/templates/': {
      id: '/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/surveys': typeof SurveysIndexRoute
  '/templates': typeof TemplatesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/surveys': typeof SurveysIndexRoute
  '/templates': typeof TemplatesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/surveys/': typeof SurveysIndexRoute
  '/templates/': typeof TemplatesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/profile'
    | '/users'
    | '/surveys/$surveyId'
    | '/templates/$templateId'
    | '/surveys'
    | '/templates'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/profile'
    | '/users'
    | '/surveys/$surveyId'
    | '/templates/$templateId'
    | '/surveys'
    | '/templates'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/profile'
    | '/users'
    | '/surveys/$surveyId'
    | '/templates/$templateId'
    | '/surveys/'
    | '/templates/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  ProfileRoute: typeof ProfileRoute
  UsersRoute: typeof UsersRoute
  SurveysSurveyIdRoute: typeof SurveysSurveyIdRoute
  TemplatesTemplateIdRoute: typeof TemplatesTemplateIdRoute
  SurveysIndexRoute: typeof SurveysIndexRoute
  TemplatesIndexRoute: typeof TemplatesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  ProfileRoute: ProfileRoute,
  UsersRoute: UsersRoute,
  SurveysSurveyIdRoute: SurveysSurveyIdRoute,
  TemplatesTemplateIdRoute: TemplatesTemplateIdRoute,
  SurveysIndexRoute: SurveysIndexRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account",
        "/profile",
        "/users",
        "/surveys/$surveyId",
        "/templates/$templateId",
        "/surveys/",
        "/templates/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/users": {
      "filePath": "users.tsx"
    },
    "/surveys/$surveyId": {
      "filePath": "surveys/$surveyId.tsx"
    },
    "/templates/$templateId": {
      "filePath": "templates/$templateId.tsx"
    },
    "/surveys/": {
      "filePath": "surveys/index.tsx"
    },
    "/templates/": {
      "filePath": "templates/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

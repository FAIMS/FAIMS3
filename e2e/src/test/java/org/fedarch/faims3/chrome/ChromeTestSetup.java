/*
 * Copyright 2021 Macquarie University
 *
 * Licensed under the Apache License Version 2.0 (the, "License");
 * you may not use, this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing software
 * distributed under the License is distributed on an "AS IS" BASIS
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied.
 * See, the License, for the specific language governing permissions and
 * limitations under the License.
 *
 * Filename: ChromeTest.java
 * Description:
 *   TODO
 */
package org.fedarch.faims3.chrome;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

import org.fedarch.faims3.E2ETestSetup;
import org.fedarch.faims3.TestUtils;
import org.json.JSONException;
import org.json.JSONObject;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

public class ChromeTestSetup extends E2ETestSetup {
	// Test URL generated by Github Actions nightly build
	public static final String FAIMS_TEST_URL = "https://selenium.3.faims.edu.au/";

	/**
	 * Setup the ChromeDriver based on parameter.
	 * @param localTest If true, then we'll set up a local connection. Otherwise we'll set up a browserstack one.
	 * @param testDesc Test description for browserstack
	 * @return
	 * @throws MalformedURLException
	 * @throws JSONException
	 */
	public RemoteWebDriver setup(boolean localTest, String testDesc) throws MalformedURLException, JSONException {
		if (localTest) {
			localConnectionSetup();
			isLocal = true;
		} else {
		    browserstackSetup(testDesc);
		    isLocal = false;
		}
		return driver;
	}

	/**
	 * Localhost setup for Rini's machine.
	 * @throws MalformedURLException
	 * @throws JSONException
	 */
	public void localConnectionSetup() throws MalformedURLException, JSONException {
		ChromeOptions caps = new ChromeOptions();
		caps.setCapability("os", "Windows");
		caps.setCapability("os_version", "10");
		caps.setCapability("browser", "Chrome");
		caps.setCapability("browser_version", "latest");
		// Please download appropriate chrome driver and point to its location
		System.setProperty("webdriver.chrome.driver", "C:\\chromedriver.exe");

		// Allow location
		JSONObject jsonObject = new JSONObject();
		jsonObject.put("profile.default_content_settings.geolocation", 1);
		jsonObject.put("profile.managed_default_content_settings.geolocation", 1);

		caps.setExperimentalOption("prefs", jsonObject);
	    driver = new ChromeDriver(caps);

        //String appURL = "http://localhost:3333/";
	    String appURL = FAIMS_TEST_URL;

	    driver.get(appURL);

	    clearBrowserData();
	}

	/**
	 * Clear browser cache
	 */
	private void clearBrowserData() {
	    driver.manage().deleteAllCookies();

	    //TODO: is this enough? Please check.
	    JavascriptExecutor js = driver;
		js.executeScript("window.localStorage.clear();");
		js.executeScript("window.sessionStorage.clear();");
	}

	/**
	 * Browserstack setup for the test
	 * @param caps Common capabilities
	 * @param testDesc Tests description
	 * @throws MalformedURLException
	 */
	public void browserstackSetup(String testDesc) throws MalformedURLException {
		DesiredCapabilities caps = new DesiredCapabilities();
		caps.setCapability("os", "Windows");
		caps.setCapability("os_version", "10");
		caps.setCapability("browser", "Chrome");
		caps.setCapability("browser_version", "latest");
		caps.setCapability("project", "FAIMS3 - Chrome Windows Tests");
	    caps.setCapability("build", "Beta");
	    String desc = testDesc.concat(" : ").concat(TestUtils.getCommitMessage());
	    caps.setCapability("name",
	    		// only 255 characters allowed
	    		desc.substring(0, Math.min(desc.length(), 255))
	    );

	    turnOnBrowserstackLogs(caps);

	    // INIT CHROME OPTIONS
	    ChromeOptions options = new ChromeOptions();
	    Map < String, Object > prefs = new HashMap < String, Object > ();
	    Map < String, Object > profile = new HashMap < String, Object > ();
	    Map < String, Object > contentSettings = new HashMap < String, Object > ();
	    // SET CHROME OPTIONS
	    // 0 - Default, 1 - Allow, 2 - Block
	    contentSettings.put("geolocation", 1);
	    profile.put("managed_default_content_settings", contentSettings);
	    prefs.put("profile", profile);
	    options.setExperimentalOption("prefs", prefs);

	    // SET CAPABILITY
	    caps.setCapability(ChromeOptions.CAPABILITY, options);
	    String userName = System.getenv("BROWSERSTACK_USERNAME");
        String accessKey = System.getenv("BROWSERSTACK_ACCESS_KEY");

	    String URL = "https://" + userName + ":" + accessKey + "@hub-cloud.browserstack.com/wd/hub";

	    driver = new RemoteWebDriver(new URL(URL), caps);

	    driver.get(FAIMS_TEST_URL);

	}
}
